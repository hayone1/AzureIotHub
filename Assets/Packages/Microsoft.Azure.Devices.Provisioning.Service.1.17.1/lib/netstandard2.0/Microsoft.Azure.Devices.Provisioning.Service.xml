<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Devices.Provisioning.Service</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Devices.Common.Service.Auth.AuthenticationMethodFactory">
            <summary>
            Creates an instance of an implementation of <see cref="T:Microsoft.Azure.Devices.Common.Service.Auth.IAuthenticationMethod"/> based on known authentication parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Common.Service.Auth.AuthenticationMethodFactory.CreateAuthenticationWithSharedAccessPolicyKey(System.String,System.String)">
            <summary>
             Factory method to create a ServiceAuthenticationWithSharedAccessPolicyKey object
            </summary>
            <param name="policyName"> PolicyName </param>
            <param name="key"> SharedAccessKeyValue </param>
            <returns> an AuthenticationMethod object </returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Common.Service.Auth.AuthenticationMethodFactory.CreateAuthenticationWithSharedAccessPolicyToken(System.String,System.String)">
            <summary>
             Factory method to create a ServiceAuthenticationWithSharedAccessPolicyToken object
            </summary>
            <param name="policyName"> PolicyName </param>
            <param name="token"> SharedAccessSignatureToken </param>
            <returns> an AuthenticationMethod object </returns>
        </member>
        <member name="T:Microsoft.Azure.Devices.Common.Service.Auth.IAuthenticationMethod">
            <summary>
            Authentication interface to use for IoTHub communications.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Common.Service.Auth.ServiceAuthenticationWithSharedAccessPolicyKey">
            <summary>
            Authentication method that uses a shared access policy key. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Common.Service.Auth.ServiceAuthenticationWithSharedAccessPolicyKey.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Devices.Common.Service.Auth.ServiceAuthenticationWithSharedAccessPolicyKey"/> class.
            </summary>
            <param name="policyName">Name of the shared access policy to use.</param>
            <param name="key">Key associated with the shared access policy.</param>
        </member>
        <member name="T:Microsoft.Azure.Devices.Common.Service.Auth.ServiceAuthenticationWithSharedAccessPolicyToken">
            <summary>
            Authentication method that uses a shared access policy token. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Common.Service.Auth.ServiceAuthenticationWithSharedAccessPolicyToken.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Devices.Common.Service.Auth.ServiceAuthenticationWithSharedAccessPolicyToken"/> class.
            </summary>
            <param name="policyName">Name of the shared access policy to use.</param>
            <param name="token">Token associated with the shared access policy.</param>
        </member>
        <member name="T:Microsoft.Azure.Devices.Common.Service.Auth.ServiceConnectionString">
            <summary>
            This object handles the connection string for the Azure IoT Services.
            </summary>
            <remarks>
            The connection string contains a set of information that uniquely identify an IoT Service.
            
            A valid connection string shall be in the following format:
            <code>
            HostName=[ServiceName];SharedAccessKeyName=[keyName];SharedAccessKey=[Key]
            </code>
            
            This object parse and store the connection string. It is responsible to provide the authorization token too. 
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Devices.Common.Service.Auth.ServiceConnectionString.#ctor(Microsoft.Azure.Devices.Common.Service.Auth.ServiceConnectionStringBuilder)">
            <summary>
            CONSTRUCOR
            </summary>
            <param name="builder">the <see cref="T:Microsoft.Azure.Devices.Common.Service.Auth.ServiceConnectionStringBuilder"/> with the connection string content.</param>
            <exception cref="T:System.ArgumentNullException">if the provided builder is null.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Common.Service.Auth.ServiceConnectionStringBuilder.Create(System.String)">
            <summary>
            Factory for new Connection String object.
            </summary>
            <remarks>
            The connection string contains a set of information that uniquely identify an IoT Service.
            
            A valid connection string shall be in the following format:
            <code>
            HostName=[ServiceName];SharedAccessKeyName=[keyName];SharedAccessKey=[Key]
            </code>
            
            This object parse the connection string providing the artifacts to the <see cref="T:Microsoft.Azure.Devices.Common.Service.Auth.ServiceConnectionString"/> object. 
            </remarks>
            <param name="serviceConnectionString">the <code>string</code> with the connection string information.</param>
            <returns>A <code>ServiceConnectionStringBuilder</code> object with the parsed connection string.</returns>
        </member>
        <member name="T:Microsoft.Azure.Devices.Common.Tracing.EventTraceActivity">
            <summary>
            This class holds the ActivityId that would be set on the thread for ETW during the trace.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Common.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ActionItemIsAlreadyScheduled">
            <summary>
              Looks up a localized string similar to The ActionItem was scheduled for execution but has not completed yet..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ArgumentNullOrEmpty">
            <summary>
              Looks up a localized string similar to The argument {0} is null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ArgumentNullOrWhiteSpace">
            <summary>
              Looks up a localized string similar to The argument {0} is null or white space..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ArgumentOutOfRange">
            <summary>
              Looks up a localized string similar to The value supplied must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.AsyncCallbackThrewException">
            <summary>
              Looks up a localized string similar to An AsyncCallback threw an exception..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.AsyncResultAlreadyEnded">
            <summary>
              Looks up a localized string similar to End cannot be called twice on the same AsyncResult..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.AsyncResultCompletedTwice">
            <summary>
              Looks up a localized string similar to The IAsyncResult implementation &apos;{0}&apos; tried to complete a single operation multiple times. This could be caused by an incorrect application of IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values, or invokes the AsyncCallback multiple times..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.AsyncTransactionException">
            <summary>
              Looks up a localized string similar to An exception was thrown from a TransactionScope used to flow a transaction into an asynchronous operation..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.BufferAllocationFailed">
            <summary>
              Looks up a localized string similar to Failed to allocate a managed memory buffer of {0} bytes. The amount of available memory may be low..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.BufferAlreadyReclaimed">
            <summary>
              Looks up a localized string similar to The buffer has already been reclaimed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.BufferIsNotRightSizeForBufferManager">
            <summary>
              Looks up a localized string similar to This buffer cannot be returned to the buffer manager because it is the wrong size..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.CreateSessionOnClosingConnection">
            <summary>
              Looks up a localized string similar to Can&apos;t create session when the connection is closing..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.CreditListenerAlreadyRegistered">
            <summary>
              Looks up a localized string similar to Credit listener is already registered..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.DeviceAlreadyExists">
            <summary>
              Looks up a localized string similar to A device with Id &apos;{0}&apos; is already registered..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.DeviceImportError">
            <summary>
              Looks up a localized string similar to Import error for device Id &apos;{0}&apos;: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.DeviceKeyLengthInvalid">
            <summary>
              Looks up a localized string similar to The primary and secondary keys must be between {0} and {1} bytes in length..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.DeviceNotFound">
            <summary>
              Looks up a localized string similar to &quot;Device {0} at IotHub {1} not registered&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.DeviceNotRegistered">
            <summary>
              Looks up a localized string similar to A device with Id &apos;{0}&apos; is not registered..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.DeviceQuotaExceededExceptionMessage">
            <summary>
              Looks up a localized string similar to Total number of devices on IotHub &apos;{0}&apos; exceeded the allocated quota. Max allowed device count : &apos;{1}&apos;, current device count : &apos;{2}&apos;. Consider increasing the units for this hub to increase the quota..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.DispositionListenerAlreadyRegistered">
            <summary>
              Looks up a localized string similar to Disposition listener is already registered..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.DispositionListenerSetNotSupported">
            <summary>
              Looks up a localized string similar to Not supported when the disposition listener is set..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ErrorConvertingToChar">
            <summary>
              Looks up a localized string similar to Failed to convert to a char..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ETagMismatch">
            <summary>
              Looks up a localized string similar to ETag mismatch for device Id &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.FailFastMessage">
            <summary>
              Looks up a localized string similar to An unrecoverable error occurred. For diagnostic purposes, this English message is associated with the failure: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.InternalServerError">
            <summary>
              Looks up a localized string similar to Internal server error..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.InvalidAsyncResult">
            <summary>
              Looks up a localized string similar to The AsyncResult object used to end this operation was not the object that was returned when the operation was initiated..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.InvalidAsyncResultImplementation">
            <summary>
              Looks up a localized string similar to An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. The type {0} could be the incorrect implementation..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.InvalidAsyncResultImplementationGeneric">
            <summary>
              Looks up a localized string similar to An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.InvalidBufferSize">
            <summary>
              Looks up a localized string similar to The buffer size is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.InvalidDeviceLine">
            <summary>
              Looks up a localized string similar to Invalid device format in line: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.InvalidFrameSize">
            <summary>
              Looks up a localized string similar to Invalid frame size:{0}, maximum frame size:{1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.InvalidNullAsyncResult">
            <summary>
              Looks up a localized string similar to A null value was returned from an asynchronous &apos;Begin&apos; method or passed to an AsyncCallback. Asynchronous &apos;Begin&apos; implementations must return a non-null IAsyncResult and pass the same IAsyncResult object as the parameter to the AsyncCallback..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.InvalidSemaphoreExit">
            <summary>
              Looks up a localized string similar to Object synchronization method was called from an unsynchronized block of code..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.IOThreadTimerCannotAcceptMaxTimeSpan">
            <summary>
              Looks up a localized string similar to IOThreadTimer cannot accept Timespan.MaxValue..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.IotHubSuspendedException">
            <summary>
              Looks up a localized string similar to IotHub &apos;{0}&apos; is suspended.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.MessageListenerAlreadyRegistered">
            <summary>
              Looks up a localized string similar to Message listener is already registered..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.MessageQuotaExceededExceptionMessage">
            <summary>
              Looks up a localized string similar to Total number of messages on IotHub &apos;{0}&apos; exceeded the allocated quota. Max allowed message count : &apos;{1}&apos;, current message count : &apos;{2}&apos;. Send and Receive operations are blocked for this hub until the next UTC day. Consider increasing the units for this hub to increase the quota..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.NotSupportFrameCode">
            <summary>
              Looks up a localized string similar to Unsupported type {0} for array..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ObjectIsReadOnly">
            <summary>
              Looks up a localized string similar to This object is read-only and cannot be modified..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.OperationTimedOut">
            <summary>
              Looks up a localized string similar to The operation timed out..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ServerCertificateNotSet">
            <summary>
              Looks up a localized string similar to Service certificate must be set..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ShipAssertExceptionMessage">
            <summary>
              Looks up a localized string similar to An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.StringIsNotBase64">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid Base64 encoded string..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.TargetHostNotSet">
            <summary>
              Looks up a localized string similar to TargetHost must be set..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.TimeoutMustBeNonNegative">
            <summary>
              Looks up a localized string similar to Argument {0} must be a non-negative timeout value. The provided value was {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.TimeoutMustBePositive">
            <summary>
              Looks up a localized string similar to Argument {0} must be a positive timeout value. The provided value was {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.UnspecifiedError">
            <summary>
              Looks up a localized string similar to An error occurred..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.UserErrorFormat">
            <summary>
              Looks up a localized string similar to {0} If you contact a support representative please include this correlation identifier: {1}, timestamp: {2:u}, errorcode: IH{3}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Common.Resources.ValueMustBeNonNegative">
            <summary>
              Looks up a localized string similar to The value of this argument must be non-negative..
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.AllocationPolicy">
            <summary>
            The Device Provisioning Service enrollment level allocation policies.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.AllocationPolicy.Hashed">
            <summary>
            Use hashing during allocation
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.AllocationPolicy.GeoLatency">
            <summary>
            Use geoLatency during allocation
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.AllocationPolicy.Static">
            <summary>
            Use a static allocation
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.AllocationPolicy.Custom">
            <summary>
            Use a custom allocation
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.Attestation">
            <summary>
            This is the abstract class that unifies all possible types of attestation that Device Provisioning Service supports.
            </summary>
            <remarks>
            For now, the provisioning service supports <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation"/> or <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism">
            <summary>
            Representation of a single Device Provisioning Service Attestation mechanism of an IndividualEnrollment or an EnrollmentGroup.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism.#ctor(Microsoft.Azure.Devices.Provisioning.Service.Attestation)">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            It will create a new instance of the AttestationMechanism for the provided attestation type.
            </remarks>
            <param name="attestation">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Attestation"/> with the TPM keys, X509 certificates, or Symmetric keys. It cannot
                be <code>null</code>.</param>
            <exception cref="T:System.ArgumentNullException">If the provided attestation is <code>null</code>.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism.#ctor(Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanismType,Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation,Microsoft.Azure.Devices.Provisioning.Service.X509Attestation,Microsoft.Azure.Devices.Provisioning.Service.SymmetricKeyAttestation)">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            Constructor for JSON. It will receive the attestation and the attestation type, check if it is correct
            and store the information.
            </remarks>
            <param name="type">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanismType"/> identifying each attestation the provisioning service
                is using.</param>
            <param name="tpm">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation"/> with the TPM keys.</param>
            <param name="x509">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation"/> with the certificate information.</param>
            <param name="symmetricKey">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.SymmetricKeyAttestation"/> with the primary and secondary key.</param>
            <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the received JSON is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism.GetAttestation">
            <summary>
            Get the attestation of this object. The returned attestation may be of type
            <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.SymmetricKeyAttestation"/>, <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation"/>, or <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation"/>.
            By casting the returned Attestation to the appropriate attestation type, you can access the x509/symmetric key/tpm
            specific attestation fields. Use <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism.Type"/> to cast this field to the appropriate attestation type.
            </summary>
            <returns>The attestation of this object.</returns>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism.Type">
            <summary>
             Attestation Type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism.Tpm">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation"/> used for attestation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism.X509">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation"/> used for attestation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanismType">
            <summary>
            Type of Device Provisioning Service attestation mechanism.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanismType.None">
            <summary>
            None attestation mechanism.
            </summary>
            <remarks>
            There is no valid scenario for `none` Attestation Mechanism Type.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanismType.Tpm">
            <summary>
            Tpm attestation mechanism.
            </summary>
            <remarks>
            Identify the attestation mechanism as <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation"/>.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanismType.X509">
            <summary>
            x509 attestation mechanism.
            </summary>
            <remarks>
            Identify the attestation mechanism as <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation"/>.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanismType.SymmetricKey">
            <summary>
            Symmetric Key attestation mechanism
            </summary>
            <remarks>
            Identify the attestation mechanism as <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.SymmetricKeyAttestation"/>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperation">
             <summary>
             Representation of a single Device Provisioning Service bulk operation with a JSON serializer.
             </summary>
             <remarks>
             It is an internal class that creates a JSON for the bulk operations
                 over the IndividualEnrollment. To use bulk operations, please use
                 the external API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.RunBulkEnrollmentOperationAsync(Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment})"/>.
            
             The following JSON is an example of the result of this serializer.
             </remarks>
             <code>
             {
                "mode":"update",
                "enrollments":
                [
                    {
                        "registrationId":"validRegistrationId-1",
                        "deviceId":"ContosoDevice-1",
                        "attestation":{
                            "type":"tpm",
                            "tpm":{
                                "endorsementKey":"validEndorsementKey"
                            }
                        },
                        "iotHubHostName":"ContosoIoTHub.azure-devices.net",
                        "provisioningStatus":"enabled"
                    },
                    {
                        "registrationId":"validRegistrationId-2",
                        "deviceId":"ContosoDevice-2",
                        "attestation":{
                            "type":"tpm",
                           "tpm":{
                                "endorsementKey":"validEndorsementKey"
                            }
                        },
                        "iotHubHostName":"ContosoIoTHub.azure-devices.net",
                        "provisioningStatus":"enabled"
                    }
                ]
             }
             </code>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperation.BulkOperation.Mode">
            <summary>
            Operation mode
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperation.BulkOperation.Enrollments">
            <summary>
            Enrollments for bulk operation
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperation.ToJson(Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment})">
            <summary>
            Serializer
            </summary>
            <remarks>
            Creates a <code>string</code>, whose content represents the mode and the collection of
                individualEnrollments in a JSON format.
            </remarks>
            <param name="mode">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode"/> that defines the single operation to do over the 
                individualEnrollments.</param>
            <param name="individualEnrollments">the collection of <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> that contains the description 
                of each individualEnrollment.</param>
            <returns>The <code>string</code> with the content of this class.</returns>
            <exception cref="T:System.ArgumentNullException">if the individualEnrollments is null.</exception>
            <exception cref="T:System.ArgumentException">if the individualEnrollments is invalid.</exception>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationError">
            <summary>
            Representation of a single Device Provisioning Service device registration operation error.
            </summary>
            <remarks>
            This error is returned as a result of the
                <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.RunBulkEnrollmentOperationAsync(Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment})"/>
                as part of the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationResult"/>.
            </remarks>
            <example>
            The following JSON is an example of a single error operation from a Bulk operation
            <code>
            {
                 "registrationId":"validRegistrationId1",
                 "errorCode":200,
                 "errorStatus":"Succeeded"
            }
            </code>
            </example>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationError.RegistrationId">
            <summary>
            Registration Id.
            </summary>
            <remarks>
            A valid registration Id shall be alphanumeric, lowercase, and may contain hyphens. Max characters 128.
            </remarks>
            <exception cref="T:System.ArgumentException">if the provided string does not fit the registration Id requirements</exception>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationError.ErrorCode">
            <summary>
            Error code.
            </summary>
            <remarks>
            Report any error during the operation for the specific registrationId.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationError.ErrorStatus">
            <summary>
            Error status.
            </summary>
            <remarks>
            Describe any error during the operation for the specific registrationId.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationResult">
             <summary>
             Representation of a single Device Provisioning Service bulk operation result with a JSON deserializer.
             </summary>
             <remarks>
             This error is returned as a result of the 
                 <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.RunBulkEnrollmentOperationAsync(Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment})"/>.
            
             The provisioning service provides general bulk result in the isSuccessful, and a individual error result
                 for each enrollment in the bulk.
             </remarks>
             <example>
              The following JSON is an example of the result from a bulk operation.
             <code>
             {
                 "isSuccessful":true,
                 "errors": [
                     {
                         "registrationId":"validRegistrationId1",
                         "errorCode":200,
                         "errorStatus":"Succeeded"
                     },
                     {
                         "registrationId":"validRegistrationId2",
                         "errorCode":200,
                         "errorStatus":"Succeeded"
                     }
                 ]
             }
             </code>
             </example>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationResult.IsSuccessful">
            <summary>
            If false, not all operations in the bulk enrollment succeeded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationResult.Errors">
            <summary>
            Registration errors.
            </summary>
            <remarks>
            Detail each enrollment failed in the bulk operation, and report the fail reason.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationResult.ToString">
            <summary>
            Convert this object in a pretty print format.
            </summary>
            <returns>The <code>string</code> with the content of this class in a pretty print format.</returns>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode">
            <summary>
            The Device Provisioning Service bulk operation modes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode.Create">
            <summary>
            Create mode.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode.Update">
            <summary>
            Update mode.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode.UpdateIfMatchETag">
            <summary>
            Update only if the ETag matches.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode.Delete">
            <summary>
            Delete mode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.CustomAllocationDefinition">
            <summary>
            Defines a custom allocation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.CustomAllocationDefinition.WebhookUrl">
            <summary>
            The webhook URL used for allocation requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.CustomAllocationDefinition.ApiVersion">
            <summary>
            The API version of the provisioning service types (such as IndividualEnrollment) sent in the custom allocation request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState">
            <summary>
            Registration status.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/>
            </summary>
            <param name="registrationId">Registration Id</param>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.RegistrationId">
            <summary>
            Registration Id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.CreatedDateTimeUtc">
            <summary>
            Registration create date time (in UTC).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.LastUpdatedDateTimeUtc">
            <summary>
            Last updated date time (in UTC).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.AssignedHub">
            <summary>
            Assigned IoT hub.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.DeviceId">
            <summary>
            Device Id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.ErrorCode">
            <summary>
            Error code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.ErrorMessage">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState.ETag">
            <summary>
            Registration status ETag
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup">
             <summary>
             Representation of a single Device Provisioning Service enrollment group with a JSON serializer and deserializer.
             </summary>
             <remarks>
             This object is used to send EnrollmentGroup information to the provisioning service, or receive EnrollmentGroup
                information from the provisioning service.
            
             To create or update an EnrollmentGroup on the provisioning service you should fill this object and call the
                public API {@link ProvisioningServiceClient#createOrUpdateEnrollmentGroup(EnrollmentGroup)}.
                The minimum information required by the provisioning service is the {@link #enrollmentGroupId} and the
                {@link #attestation}.
            
             To provision a device using EnrollmentGroup, it must contain a X509 chip with a signingCertificate for the
                {@link X509Attestation} mechanism.
            
             The content of this class will be serialized in a JSON format and sent as a body of the rest API to the
                provisioning service.
            
             The content of this class can be filled by a JSON, received from the provisioning service, as result of a
                EnrollmentGroup operation like create, update, or query EnrollmentGroup.
             </remarks>
             <example>
             When serialized, an EnrollmentGroup will look like the following example:
             <code>
             {
                "enrollmentGroupId":"validEnrollmentGroupId",
                "attestation":{
                    "type":"x509",
                    "signingCertificates":{
                        "primary":{
                            "certificate":"[valid certificate]"
                        }
                    }
                },
                "iotHubHostName":"ContosoIoTHub.azure-devices.net",
                "provisioningStatus":"enabled"
             }
             </code>
            
             The following JSON is a sample of the EnrollmentGroup response, received from the provisioning service.
             <code>
             {
                "enrollmentGroupId":"validEnrollmentGroupId",
                "attestation":{
                    "type":"x509",
                    "signingCertificates":{
                        "primary":{
                            "certificate":"[valid certificate]",
                            "info": {
                                "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                                "sha1Thumbprint": "0000000000000000000000000000000000",
                                "sha256Thumbprint": "validEnrollmentGroupId",
                                "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                                "notBeforeUtc": "2017-11-14T12:34:18Z",
                                "notAfterUtc": "2017-11-20T12:34:18Z",
                                "serialNumber": "000000000000000000",
                                "version": 3
                            }
                        }
                    }
                },
                "iotHubHostName":"ContosoIoTHub.azure-devices.net",
                "provisioningStatus":"enabled",
                "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",
                "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",
                "etag": "\"00000000-0000-0000-0000-00000000000\""
             }
             </code>
             </example>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.#ctor(System.String,Microsoft.Azure.Devices.Provisioning.Service.Attestation)">
             <summary>
             Creates a new instance of <code>EnrollmentGroup</code>.
             </summary>
             <remarks>
             This constructor creates an instance of the EnrollmentGroup object with the minimum set of
             information required by the provisioning service. A valid EnrollmentGroup must contain the
             enrollmentGroupId, which uniquely identify this enrollmentGroup, and the attestation mechanism,
             which must X509.
            
             Other parameters can be added by calling the setters on this object.
             </remarks>
             <example>
             When serialized, an EnrollmentGroup will look like the following example:
             <code>
             {
                 "enrollmentGroupId":"validEnrollmentGroupId",
                 "attestation":{
                     "type":"x509",
                     "signingCertificates":{
                         "primary":{
                             "certificate":"[valid certificate]"
                         }
                     }
                 }
             }
             </code>
             </example>
             <param name="enrollmentGroupId">the <code>string</code> that uniquely identify this enrollmentGroup in the provisioning
                 service. It cannot be <code>null</code> or empty.</param>
             <param name="attestation">the <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.Attestation"/> object with the attestation mechanism. It cannot be <code>null</code>.</param>
             <exception cref="T:System.ArgumentNullException">if one of the provided parameters is not correct</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.#ctor(System.String,Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism,System.String,Microsoft.Azure.Devices.Provisioning.Service.TwinState,System.Nullable{Microsoft.Azure.Devices.Provisioning.Service.ProvisioningStatus},System.DateTime,System.DateTime,System.String,Microsoft.Azure.Devices.Shared.DeviceCapabilities)">
            <summary>
            Creates a new instance of <code>EnrollmentGroup</code> using information in a JSON.
            </summary>
            <remarks>
            This constructor creates an instance of the enrollmentGroup filling the class with the information
            provided in the JSON. It is used by the SDK to parse EnrollmentGroup responses from the provisioning service.
            </remarks>
            <example>
            The following JSON is a sample of the EnrollmentGroup response, received from the provisioning service.
            <code>
            {
               "enrollmentGroupId":"validEnrollmentGroupId",
               "attestation":{
                   "type":"x509",
                   "signingCertificates":{
                       "primary":{
                           "certificate":"[valid certificate]",
                           "info": {
                               "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                               "sha1Thumbprint": "0000000000000000000000000000000000",
                               "sha256Thumbprint": "validEnrollmentGroupId",
                               "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                               "notBeforeUtc": "2017-11-14T12:34:18Z",
                               "notAfterUtc": "2017-11-20T12:34:18Z",
                               "serialNumber": "000000000000000000",
                               "version": 3
                           }
                       }
                   }
               },
               "iotHubHostName":"ContosoIoTHub.azure-devices.net",
               "provisioningStatus":"enabled",
               "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",
               "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",
               "etag": "\"00000000-0000-0000-0000-00000000000\""
            }
            </code>
            </example>
            <param name="enrollmentGroupId">the <code>string</code> with a unique id for the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
            <param name="attestation">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism"/> for the enrollment. It shall be `X509` or `SymmetricKey`.</param>
            <param name="iotHubHostName">the <code>string</code> with the target IoTHub name. This is optional and can be <code>null</code> or empty.</param>
            <param name="initialTwinState">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.TwinState"/> with the initial Twin condition. This is optional and can be <code>null</code>.</param>
            <param name="provisioningStatus">the <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.ProvisioningStatus"/> that determine the initial status of the device. This is optional and can be <code>null</code>.</param>
            <param name="createdDateTimeUtc">the <code>DateTime</code> with the date and time that the enrollment was created. This is optional and can be <code>null</code>.</param>
            <param name="lastUpdatedDateTimeUtc">the <code>DateTime</code> with the date and time that the enrollment was updated. This is optional and can be <code>null</code>.</param>
            <param name="eTag">the <code>string</code> with the eTag that identify the correct instance of the enrollment in the service. It cannot be <code>null</code> or empty.</param>
            <param name="capabilities">The capabilities of the device (ie: is it an edge device?)</param>
            <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the received JSON is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.ToString">
            <summary>
            Convert this object in a pretty print format.
            </summary>
            <returns>The <code>string</code> with the content of this class in a pretty print format.</returns>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.EnrollmentGroupId">
            <summary>
            Enrollment Group Id.
            </summary>
            <remarks>
            A valid enrollmentGroup Id shall be alphanumeric, lowercase, and may contain hyphens. Max characters 128.
            </remarks>
            <exception cref="T:System.ArgumentException">if the provided string does not fit the enrollmentGroup Id requirements</exception>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.RegistrationState">
            <summary>
            Current registration state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup._attestation">
            <summary>
            Attestation Mechanism
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.Attestation">
            <summary>
            Getter and setter for Attestation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.IotHubHostName">
            <summary>
            Desired IotHub to assign the device to
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.InitialTwinState">
            <summary>
            Initial twin state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.ProvisioningStatus">
            <summary>
            The provisioning status.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.CreatedDateTimeUtc">
            <summary>
            The DateTime this resource was created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.LastUpdatedDateTimeUtc">
            <summary>
            The DateTime this resource was last updated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.ETag">
            <summary>
            Enrollment's ETag
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.Capabilities">
            <summary>
            Capabilities of the device
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.ReprovisionPolicy">
            <summary>
            The behavior when a device is re-provisioned to an IoT hub.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.AllocationPolicy">
            <summary>
            The allocation policy of this resource. Overrides the tenant level allocation policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.IotHubs">
            <summary>
            The list of names of IoT hubs the device(s) in this resource can be allocated to. Must be a subset of tenant level list of IoT hubs
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup.CustomAllocationDefinition">
            <summary>
            Custom allocation definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentStatus">
            <summary>
            Enrollment status
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentStatus.Unassigned">
            <summary>
            Device has not yet come on-line
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentStatus.Assigning">
            <summary>
            Device has connected to the DRS but IoT Hub Id has not yet been returned to the device
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentStatus.Assigned">
            <summary>
            DRS successfully returned a device Id and connection string to the device
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentStatus.Failed">
            <summary>
            Device enrollment failed
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentStatus.Disabled">
            <summary>
            Device is disabled
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment">
             <summary>
             Representation of a single Device Provisioning Service enrollment and their accessors with a JSON serializer
                 and deserializer.
             </summary>
             <remarks>
             This object is used to send and receive individualEnrollment information to and from the provisioning service.
            
             To create or update an Enrollment on the provisioning service you should fill this object and call the
             public API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateOrUpdateIndividualEnrollmentAsync(Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment)"/>.
            
             The minimum information required by the provisioning service is the <code>RegistrationId</code> and the
             <code>Attestation</code>.
            
             A new device can be provisioned by three attestation mechanisms, Trust Platform Module (see <see cref=
             "T:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation"/>), X509 (see <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation"/>) or Symmetric Key (see <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.SymmetricKeyAttestation"/>). The definition of each one you
             should use depending on the physical authentication hardware that the device contains.
            
             The content of this class will be serialized in a JSON format and sent as a body of the rest API to the
             provisioning service. Or the content of this class can be filled by a JSON, received from the provisioning
             service, as result of a individualEnrollment operation like create, update, or query.
             </remarks>
             <example>
             When serialized, an individualEnrollment will look like the following example:
             <code>
             {
                 "registrationId":"validRegistrationId",
                 "deviceId":"ContosoDevice-123",
                 "attestation":{
                     "type":"tpm",
                     "tpm":{
                            "endorsementKey":"validEndorsementKey"
                     }
                 },
                 "iotHubHostName":"ContosoIoTHub.azure-devices.net",
                 "provisioningStatus":"enabled"
             }
             </code>
            
             The following JSON is a sample of the individualEnrollment response, received from the provisioning service.
             <code>
             {
                 "registrationId":"validRegistrationId",
                 "deviceId":"ContosoDevice-123",
                 "attestation":{
                     "type":"tpm",
                     "tpm":{
                         "endorsementKey":"validEndorsementKey"
                     }
                 },
                 "iotHubHostName":"ContosoIoTHub.azure-devices.net",
                 "provisioningStatus":"enabled"
                 "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",
                 "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",
                 "etag": "\"00000000-0000-0000-0000-00000000000\""
             }
             </code>
             </example>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.#ctor(System.String,Microsoft.Azure.Devices.Provisioning.Service.Attestation)">
             <summary>
             Creates a new instance of <code>IndividualEnrollment</code>.
             </summary>
             <remarks>
             This constructor creates an instance of the IndividualEnrollment object with the minimum set of
             information required by the provisioning service. A valid individualEnrollment must contain the
             registrationId, which uniquely identify this enrollment, and the attestation mechanism, which can
             be TPM, X509, or Symmetric key.
            
             Other parameters can be added by calling the setters on this object.
             </remarks>
             <example>
             When serialized, an IndividualEnrollment will look like the following example:
             <code>
             {
                "registrationId":"validRegistrationId",
                "attestation":{
                    "type":"tpm",
                    "tpm":{
                        "endorsementKey":"validEndorsementKey"
                    }
                }
             }
             </code>
             </example>
             <param name="registrationId">the <code>string</code> that uniquely identify this enrollment in the provisioning
                 service. It cannot be <code>null</code> or empty.</param>
             <param name="attestation">the <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.Attestation"/> object with the attestation mechanism. It cannot be <code>null</code>.</param>
             <exception cref="T:System.ArgumentNullException">if one of the provided parameters is not correct</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.#ctor(System.String,Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism,System.String,System.String,Microsoft.Azure.Devices.Provisioning.Service.TwinState,System.Nullable{Microsoft.Azure.Devices.Provisioning.Service.ProvisioningStatus},System.DateTime,System.DateTime,System.String,Microsoft.Azure.Devices.Shared.DeviceCapabilities)">
            <summary>
            Creates a new instance of <code>IndividualEnrollment</code> using information in a JSON.
            </summary>
            <remarks>
            This constructor creates an instance of the enrollment filling the class with the information
            provided in the JSON. It is used by the SDK to parse enrollment responses from the provisioning service.
            </remarks>
            <example>
            The following JSON is a sample of the IndividualEnrollment response, received from the provisioning service.
            <code>
            {
               "registrationId":"validRegistrationId",
               "deviceId":"ContosoDevice-123",
               "attestation":{
                   "type":"tpm",
                   "tpm":{
                       "endorsementKey":"validEndorsementKey"
                   }
               },
               "iotHubHostName":"ContosoIoTHub.azure-devices.net",
               "provisioningStatus":"enabled"
               "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",
               "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",
               "etag": "\"00000000-0000-0000-0000-00000000000\""
            }
            </code>
            </example>
            <param name="registrationId">the <code>string</code> with a unique id for the individualEnrollment. It cannot be <code>null</code> or empty.</param>
            <param name="attestation">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism"/> for the enrollment. It shall be `TPM`, `X509` or `SymmetricKey`.</param>
            <param name="deviceId">the <code>string</code> with the device name. This is optional and can be <code>null</code> or empty.</param>
            <param name="iotHubHostName">the <code>string</code> with the target IoTHub name. This is optional and can be <code>null</code> or empty.</param>
            <param name="initialTwinState">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.TwinState"/> with the initial Twin condition. This is optional and can be <code>null</code>.</param>
            <param name="provisioningStatus">the <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.ProvisioningStatus"/> that determine the initial status of the device. This is optional and can be <code>null</code>.</param>
            <param name="createdDateTimeUtc">the <code>DateTime</code> with the date and time that the enrollment was created. This is optional and can be <code>null</code>.</param>
            <param name="lastUpdatedDateTimeUtc">the <code>DateTime</code> with the date and time that the enrollment was updated. This is optional and can be <code>null</code>.</param>
            <param name="eTag">the <code>string</code> with the eTag that identify the correct instance of the enrollment in the service. It cannot be <code>null</code> or empty.</param>
            <param name="capabilities">the <see cref="T:Microsoft.Azure.Devices.Shared.DeviceCapabilities"/> that identifies the device capabilities. This is optional and can be <code>null</code>.</param>
            <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the received JSON is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.ToString">
            <summary>
            Convert this object in a pretty print format.
            </summary>
            <returns>The <code>string</code> with the content of this class in a pretty print format.</returns>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.RegistrationId">
            <summary>
            Registration Id.
            </summary>
            <remarks>
            A valid registration Id shall be alphanumeric, lowercase, and may contain hyphens. Max characters 128.
            </remarks>
            <exception cref="T:System.ArgumentException">if the provided string does not fit the registration Id requirements</exception>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.DeviceId">
            <summary>
            Desired IoT Hub device Id (optional).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.RegistrationState">
            <summary>
            Current registration state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment._attestation">
            <summary>
            Attestation Mechanism
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.Attestation">
            <summary>
            Attestation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.IotHubHostName">
            <summary>
            Desired IotHub to assign the device to
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.InitialTwinState">
            <summary>
            Initial twin state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.ProvisioningStatus">
            <summary>
            The provisioning status.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.CreatedDateTimeUtc">
            <summary>
            The DateTime this resource was created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.LastUpdatedDateTimeUtc">
            <summary>
            The DateTime this resource was last updated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.ETag">
            <summary>
            Enrollment's ETag
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.Capabilities">
            <summary>
            Capabilities of the device
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.ReprovisionPolicy">
            <summary>
            The behavior when a device is re-provisioned to an IoT hub.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.CustomAllocationDefinition">
            <summary>
            Custom allocation definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.AllocationPolicy">
            <summary>
            The allocation policy of this resource. Overrides the tenant level allocation policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment.IotHubs">
            <summary>
            The list of names of IoT hubs the device in this resource can be allocated to. Must be a subset of tenant level list of IoT hubs
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningStatus">
            <summary>
            Device provisioning status.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningStatus.Enabled">
            <summary>
            Device provisioning is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningStatus.Disabled">
            <summary>
            Device provisioning is disabled.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.QueryResult">
             <summary>
             Representation of a single Device Provisioning Service query response with a JSON deserializer.
             </summary>
             <remarks>
             It is the result of any query for the provisioning service. This class will parse the result and
                 return it in a best format possible. For the known formats in <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QueryResultType"/>, you can
                 just cast the items. In case of <b>unknown</b> type, the items will contain a list of <code>string</code>
                 and you shall parse it by your own.
            
             The provisioning service query result is composed by 2 system properties and a body. This class exposes
                 it with 3 getters, <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.Type"/>, <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.Items"/>, and <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.ContinuationToken"/>.
            
             The system properties are:
             <list type="bullet">
                 <item><b>type:</b>
                     Identify the type of the content in the body. You can use it to cast the objects
                     in the items list. See <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QueryResultType"/> for the possible types and classes
                     to cast.</item>
                 <item><b>continuationToken:</b>
                     Contains the token the uniquely identify the next page of information. The
                     service will return the next page of this query when you send a new query with
                     this token.</item>
             </list>
            
             And the body is a JSON list of the specific <b>type</b>. For instance, if the system
                 property type is IndividualEnrollment, the body will look like:
             <code>
             [
                 {
                     "registrationId":"validRegistrationId-1",
                     "deviceId":"ContosoDevice-1",
                     "attestation":{
                         "type":"tpm",
                         "tpm":{
                             "endorsementKey":"validEndorsementKey"
                         }
                     },
                     "iotHubHostName":"ContosoIoTHub.azure-devices.net",
                     "provisioningStatus":"enabled"
                 },
                 {
                     "registrationId":"validRegistrationId-2",
                     "deviceId":"ContosoDevice-2",
                     "attestation":{
                         "type":"tpm",
                        "tpm":{
                             "endorsementKey":"validEndorsementKey"
                         }
                     },
                     "iotHubHostName":"ContosoIoTHub.azure-devices.net",
                     "provisioningStatus":"enabled"
                 }
             ]
             </code>
             </remarks>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.Type">
            <summary>
            Getter for the query result Type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.Items">
            <summary>
            Getter for the list of query result Items.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.ContinuationToken">
            <summary>
            Getter for the query result continuationToken.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.#ctor(System.String,System.String,System.String)">
            <summary>
            CONSTRUCTOR
            </summary>
            <param name="typeString">the <code>string</code> with type of the content in the body. It cannot be <code>null</code>.</param>
            <param name="bodyString">the <code>string</code> with the body in a JSON list format. It cannot be <code>null</code>, or empty, if the type is different than `unknown`.</param>
            <param name="continuationToken">the <code>string</code> with the continuation token. It can be <code>null</code>.</param>
            <exception cref="T:System.ArgumentException">if one of the provided parameters is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.ToString">
            <summary>
            Convert this object in a pretty print format.
            </summary>
            <returns>The <code>string</code> with the content of this class in a pretty print format.</returns>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.QueryResultType">
            <summary>
            The Device Provisioning Service query result type
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.QueryResultType.Unknown">
            <summary>
            Unknown result type.
            </summary>
            <remarks>
            the provisioning service cannot parse the information in the body. 
            You shall cast the Objects in the items using <code>string</code> and 
            parser it depending on the query the you sent.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.QueryResultType.Enrollment">
            <summary>
            Enrollment result type.
            </summary>
            <remarks>
            The query result in a list of individualEnrollment. You shall cast the
            Objects in the items using <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/>.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.QueryResultType.EnrollmentGroup">
            <summary>
            Enrollment group result type.
            </summary>
            <remarks>
            The query result in a list of enrollmentGroup. You shall cast 
            the Objects in the items using <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/>.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.QueryResultType.DeviceRegistration">
            <summary>
            Device registration result type.
            </summary>
            <remarks>
            The query result in a list of device registration. You shall cast 
            the Objects in the items using <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification">
            <summary>
            Representation of a single Device Provisioning Service query specification with a JSON serializer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification.Query">
            <summary>
            Operation mode
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="query"></param>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.ReprovisionPolicy">
            <summary>
            Settings around reprovisioning
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.ReprovisionPolicy.UpdateHubAssignment">
            <summary>
            When set to true (default), the Device Provisioning Service will evaluate the device's IoT Hub assignment
            and update it if necessary for any provisioning requests beyond the first from a given device.
            If set to false, the device will stay assigned to its current IoT hub.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.ReprovisionPolicy.MigrateDeviceData">
            <summary>
            When set to true (default), the Device Provisioning Service will migrate the device's data (twin, device capabilities, and device Id) from one IoT hub to another during an IoT hub assignment update.
            If set to false, the Device Provisioning Service will reset the device's data to the initial desired configuration stored in the provisioning service's enrollment list.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.SymmetricKeyAttestation">
            <summary>
            Attestation using a symmetric key
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.SymmetricKeyAttestation.#ctor(System.String,System.String)">
            <summary>
            Default json constructor
            </summary>
            <param name="primaryKey">The primary key to use for attestation</param>
            <param name="secondaryKey">The secondary key to use for attestation</param>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.SymmetricKeyAttestation.PrimaryKey">
            <summary>
            Gets the primary key used for attestation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.SymmetricKeyAttestation.SecondaryKey">
            <summary>
            Gets the secondary key used for attestation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation">
             <summary>
             Representation of a single Device Provisioning Service TPM Attestation.
             </summary>
             <remarks>
             The provisioning service supports Trusted Platform Module, or TPM, as the device attestation mechanism.
             User must provide the Endorsement Key, and can, optionally, provide the Storage Root Key.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation.#ctor(System.String,System.String)">
             <summary>
             CONSTRUCTOR
             </summary>
             <remarks>
             This function will create a new instance of the TPM attestation
             with both endorsement and storage root keys. Only the endorsement
             key is mandatory.
             </remarks>
            
             <param name="endorsementKey">the <code>string</code> with the TPM endorsement key. It cannot be <code>null</code> or empty.</param>
             <param name="storageRootKey">the <code>string</code> with the TPM storage root key. It can be <code>null</code> or empty.</param>
             <exception cref="T:System.ArgumentException">if the endorsementKey is <code>null</code> or empty.</exception>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation.EndorsementKey">
            <summary>
            Gets the endorsement key used for attestation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.TpmAttestation.StorageRootKey">
            <summary>
            Gets the storage key used for attestation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.TwinState">
             <summary>
             Representation of a single Twin initial state for the Device Provisioning Service.
             </summary>
             <remarks>
             The TwinState can contain one <see cref="T:Microsoft.Azure.Devices.Shared.TwinCollection"/> of <b>Tags</b>, and one
                 <see cref="T:Microsoft.Azure.Devices.Shared.TwinCollection"/> of <b>properties.desired</b>.
            
             Each entity in the collections can contain a associated <see cref="T:Microsoft.Azure.Devices.Shared.Metadata"/>.
            
             These metadata are provided by the Service and contains information about the last
                 updated date time, and version.
             </remarks>
             <example>
             For instance, the following is a valid TwinState, represented as
                 <code>initialTwin</code> in the rest API.
             <code>
             {
                 "initialTwin": {
                     "tags":{
                         "SpeedUnity":"MPH",
                         "$metadata":{
                             "$lastUpdated":"2017-09-21T02:07:44.238Z",
                             "$lastUpdatedVersion":4,
                             "SpeedUnity":{
                                 "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                 "$lastUpdatedVersion":4
                             }
                         },
                         "$version":4
                     }
                     "properties":{
                         "desired": {
                             "MaxSpeed":{
                                 "Value":500,
                                 "NewValue":300
                             },
                             "$metadata":{
                                 "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                 "$lastUpdatedVersion":4,
                                 "MaxSpeed":{
                                     "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                     "$lastUpdatedVersion":4,
                                     "Value":{
                                         "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                         "$lastUpdatedVersion":4
                                     },
                                     "NewValue":{
                                         "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                         "$lastUpdatedVersion":4
                                     }
                                 }
                             },
                             "$version":4
                         }
                     }
                 }
             }
             </code>
             </example>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.TwinState.Tags">
            <summary>
            Getter and setter the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.TwinState"/> tags.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.TwinState.DesiredProperties">
            <summary>
            Getter and setter the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.TwinState"/> properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.TwinState.#ctor(Microsoft.Azure.Devices.Shared.TwinCollection,Microsoft.Azure.Devices.Shared.TwinCollection)">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            This constructor creates an instance of the TwinState with the provided <see cref="T:Microsoft.Azure.Devices.Shared.TwinCollection"/>
                tags and desired properties.
            </remarks>
            <example>
            When serialized, this class will looks like the following example:
            <code>
            {
                "initialTwin": {
                    "tags":{
                        "SpeedUnity":"MPH",
                        "$version":4
                    }
                    "properties":{
                        "desired":{
                            "MaxSpeed":{
                                "Value":500,
                                "NewValue":300
                            },
                            "$version":4
                        }
                    }
                }
            }
            </code>
            </example>
            <param name="tags">the <see cref="T:Microsoft.Azure.Devices.Shared.TwinCollection"/> with the initial tags state. It can be <code>null</code>.</param>
            <param name="desiredProperties">the <see cref="T:Microsoft.Azure.Devices.Shared.TwinCollection"/> with the initial desired properties. It can be <code>null</code>.</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.TwinState.ToString">
            <summary>
            Convert this object in a pretty print format.
            </summary>
            <returns>The <code>string</code> with the content of this class in a pretty print format.</returns>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation">
             <summary>
             Representation of a single Device Provisioning Service X509 Attestation.
             </summary>
             <remarks>
             The provisioning service supports Device Identifier Composition Engine, or DICE, as the device attestation
                 mechanism. To use X509, user must provide the certificate. This class provide the means to create a new
                 attestation for a X509 certificate and return it as an abstract interface <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Attestation"/>.
            
             An X509 attestation can contains one of the 3 types of certificate:
            
             <list type="bullet">
                 <item><b>Client or Alias certificate:</b>
                       Called on this class as clientCertificates, this certificate can authenticate a single device.</item>
                 <item><b>Signing or Root certificate:</b>
                       Called on this class as rootCertificates, this certificate can create multiple Client certificates
                       to authenticate multiple devices.</item>
                 <item><b>CA Reference:</b>
                       Called on this class as X509CAReferences, this is a CA reference for a rootCertificate that can
                       creates multiple Client certificates to authenticate multiple devices.</item>
             </list>
            
             The provisioning service allows user to create <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> and <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/>. 
                 For all operations over <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> with <b>X509</b>, user must provide a 
                 <b>clientCertificates</b>, and for operations over <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/>, user must provide a 
                 <b>rootCertificates</b> or a <b>X509CAReferences</b>.
            
             For each of this types of certificates, user can provide 2 Certificates, a primary and a secondary. Only the
                 primary is mandatory, the secondary is optional.
            
             The provisioning service will process the provided certificates, but will never return it back. Instead of
                 it, <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.GetPrimaryX509CertificateInfo"/> and <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.GetSecondaryX509CertificateInfo"/> 
                 will return the certificate information for the certificates.
             </remarks>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.ClientCertificates">
            <summary>
            Client certificates.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.RootCertificates">
            <summary>
            Signing certificates.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CAReferences">
            <summary>
            Certificates Authority references.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromClientCertificates(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Factory from ClientCertificates with primary certificate.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary certificate in X509Certificate2 object.
            </remarks>
            <param name="primary">the <code>X509Certificate2</code> with the primary certificate. It cannot be <code>null</code>.</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the primary certificate is <code>null</code>.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">if the one of the provided certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromClientCertificates(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Factory from ClientCertificates with primary and secondary certificates.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary and secondary certificates in X509Certificate2 objects.
            </remarks>
            <param name="primary">the <code>X509Certificate2</code> with the primary certificate. It cannot be <code>null</code>.</param>
            <param name="secondary">the <code>X509Certificate2</code> with the secondary certificate. It can be <code>null</code> (ignored).</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the primary certificate is <code>null</code>.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">if the one of the provided certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromClientCertificates(System.String)">
            <summary>
            Factory from ClientCertificates with primary certificate.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary certificate in a Base64 string.
            </remarks>
            <param name="primary">the <code>string</code> with the primary certificate. It cannot be <code>null</code> or empty.</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the primary certificate is <code>null</code> or empty.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">if the one of the provided certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromClientCertificates(System.String,System.String)">
            <summary>
            Factory from ClientCertificates with primary and secondary certificates.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary and secondary certificates in a Base64 string.
            </remarks>
            <param name="primary">the <code>string</code> with the primary certificate. It cannot be <code>null</code> or empty.</param>
            <param name="secondary">the <code>string</code> with the secondary certificate. It can be <code>null</code> or empty (ignored).</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the primary certificate is <code>null</code> or empty.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">if the one of the provided certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromRootCertificates(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Factory from RootCertificates with primary certificate.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary certificate in X509Certificate2 objects.
            </remarks>
            <param name="primary">the <code>X509Certificate2</code> with the primary certificate. It cannot be <code>null</code>.</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the primary certificate is <code>null</code>.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">if the one of the provided certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromRootCertificates(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Factory from RootCertificates with primary and secondary certificates.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary and secondary certificates in X509Certificate2 objects.
            </remarks>
            <param name="primary">the <code>X509Certificate2</code> with the primary certificate. It cannot be <code>null</code>.</param>
            <param name="secondary">the <code>X509Certificate2</code> with the secondary certificate. It can be <code>null</code> (ignored).</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the primary certificate is <code>null</code>.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">if the one of the provided certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromRootCertificates(System.String)">
            <summary>
            Factory from RootCertificates with primary certificate.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary certificate in Base64 string.
            </remarks>
            <param name="primary">the <code>string</code> with the primary certificate. It cannot be <code>null</code> or empty.</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the primary certificate is <code>null</code> or empty.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">if the one of the provided certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromRootCertificates(System.String,System.String)">
            <summary>
            Factory from RootCertificates with primary and secondary certificates.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary and secondary certificates in Base64 string.
            </remarks>
            <param name="primary">the <code>string</code> with the primary certificate. It cannot be <code>null</code> or empty.</param>
            <param name="secondary">the <code>string</code> with the secondary certificate. It can be <code>null</code> or empty (ignored).</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the primary certificate is <code>null</code> or empty.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">if the one of the provided certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromCAReferences(System.String)">
            <summary>
            Factory with CAReferences with primary CA references.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary CA reference.
            </remarks>
            <param name="primary">the <code>string</code> with the primary certificate. It cannot be <code>null</code> or empty.</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the provide primary certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.CreateFromCAReferences(System.String,System.String)">
            <summary>
            Factory with CAReferences with primary and secondary CA references.
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation with the primary and secondary CA reference.
            </remarks>
            <param name="primary">the <code>string</code> with the primary certificate. It cannot be <code>null</code> or empty.</param>
            <param name="secondary">the <code>string</code> with the secondary certificate. It can be <code>null</code> or empty (ignored).</param>
            <returns>The new instance of the X509Attestation.</returns>
            <exception cref="T:System.ArgumentException">if the provide primary certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.GetPrimaryX509CertificateInfo">
            <summary>
            Getter for the primary X509 certificate info.
            </summary>
            <remarks>
            This method is a getter for the information returned from the provisioning service for the provided
                primary certificate.
            </remarks>
            <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo"/> with the returned certificate information. it can be <code>null</code>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.GetSecondaryX509CertificateInfo">
            <summary>
            Getter for the secondary X509 certificate info.
            </summary>
            <remarks>
            This method is a getter for the information returned from the provisioning service for the provided
                secondary certificate.
            </remarks>
            <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo"/> with the returned certificate information. it can be <code>null</code>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation.#ctor(Microsoft.Azure.Devices.Provisioning.Service.X509Certificates,Microsoft.Azure.Devices.Provisioning.Service.X509Certificates,Microsoft.Azure.Devices.Provisioning.Service.X509CAReferences)">
            <summary>
            Private constructor
            </summary>
            <remarks>
            Creates a new instance of the X509Attestation using one of the 3 certificates types. 
            <b>Note:</b> This constructor requires one, and only one certificate type.
            </remarks>
            <param name="clientCertificates">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509Certificates"/> with the primary and secondary certificates for 
                Individual IndividualEnrollment.</param>
            <param name="rootCertificates">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509Certificates"/> with the primary and secondary certificates for 
                Enrollment Group.</param>
            <param name="caReferences">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CAReferences"/> with the primary and secondary CA references for 
                Enrollment Group.</param>
            <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if non certificate is provided or more than one certificates are provided.</exception>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.X509CAReferences">
             <summary>
             Representation of a single Device Provisioning Service X509 Primary and Secondary CA reference.
             </summary>
             <remarks>
             This class creates a representation of an X509 CA references. It can receive primary and secondary
             CA references, but only the primary is mandatory.
            
             Users must provide the CA reference as a <code>String</code>. This class will encapsulate both in a
             single <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509Attestation"/>.
             </remarks>
             <example>
             The following JSON is an example of the result of this class.
             <code>
             {
                 "primary": "ValidCAReference-1",
                 "secondary": "validCAReference-2"
             }
             </code>
             </example>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509CAReferences.#ctor(System.String,System.String)">
             <summary>
             CONSTRUCTOR
             </summary>
             <remarks>
             Creates a new instance of the X509 CA references using the provided CA references.
            
             The CA reference is a <code>String</code> with the name that you gave for your certificate.
             </remarks>
            
             <param name="primary">the <code>String</code> with the primary CA reference. It cannot be <code>null</code> or empty.</param>
             <param name="secondary">the <code>String</code> with the secondary CA reference. It can be <code>null</code> or empty.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the primary CA reference is <code>null</code> or empty.</exception>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CAReferences.Primary">
            <summary>
            Primary reference.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CAReferences.Secondary">
            <summary>
            Secondary reference.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo">
            <summary>
            Representation of a single X509 Certificate Info and their accessors for the Device Provisioning Service.
            </summary>
            <remarks>
            User receive this info from the provisioning service as result of X509 operations.
            </remarks>
            <example>
            This info contains a set of parameters, The following JSON is an example of the X509 certificate info.
            <code>
            {
                "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                "sha1Thumbprint": "0000000000000000000000000000000000",
                "sha256Thumbprint": "validEnrollmentGroupId",
                "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                "notBeforeUtc": "2017-11-14T12:34:18Z",
                "notAfterUtc": "2017-11-20T12:34:18Z",
                "serialNumber": "000000000000000000",
                "version": 3
            }
            </code>
            </example>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32})">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            Creates a new instance of the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo"/> using the provided set of info in the JSON.
            This method will validate each parameter and the object consistence.
            </remarks>
            
            <param name="subjectName">the distinguished name from the certificate.</param>
            <param name="sha1Thumbprint">the SHA-1 hash value of the certificate as a hexadecimal string.</param>
            <param name="sha256Thumbprint">the SHA-256 hash value of the certificate as a hexadecimal string.</param>
            <param name="issuerName">the issuer distinguished name.</param>
            <param name="notBeforeUtc">the date on which the certificate becomes valid.</param>
            <param name="notAfterUtc">the date on which the certificate is no longer valid.</param>
            <param name="serialNumber">the serial number.</param>
            <param name="version">the x509 format version</param>
            <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if one of the provided info is invalid.</exception>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo.SubjectName">
            <summary>
            Distinguished name from the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo.SHA1Thumbprint">
            <summary>
            SHA-1 hash value of the certificate as a hexadecimal string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo.SHA256Thumbprint">
            <summary>
            SHA-256 hash value of the certificate as a hexadecimal string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo.IssuerName">
            <summary>
            Issuer distinguished name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo.NotBeforeUtc">
            <summary>
            The date on which the certificate becomes valid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo.NotAfterUtc">
            <summary>
            The date on which the certificate is no longer valid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo.SerialNumber">
            <summary>
            The serial number.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo.Version">
            <summary>
            The X509 format version.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.X509Certificates">
             <summary>
             Representation of a single Device Provisioning Service X509 Primary and Secondary Certificates.
             </summary>
             <remarks>
             This class creates a representation of an X509 certificate. It can receive primary and secondary
             certificate, but only the primary is mandatory.
             </remarks>
             <example>
             The following JSON is an example of the result of this class.
             <code>
              {
                  "primary": {
                      "certificate": "-----BEGIN CERTIFICATE-----\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "-----END CERTIFICATE-----\n";
                  },
                  "secondary": {
                      "certificate": "-----BEGIN CERTIFICATE-----\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                     "-----END CERTIFICATE-----\n";
                  }
              }
             </code>
            
             After send an X509 certificate with success, the provisioning service will return the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo"/>
             for both primary and secondary certificate. User can get these info from this class, and once again, only
             the primary info is mandatory. The following JSON is an example what info the provisioning service will
             return for X509.
             <code>
              {
                  "primary": {
                      "info": {
                           "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                           "sha1Thumbprint": "0000000000000000000000000000000000",
                           "sha256Thumbprint": "validEnrollmentGroupId",
                           "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                           "notBeforeUtc": "2017-11-14T12:34:18Z",
                           "notAfterUtc": "2017-11-20T12:34:18Z",
                           "serialNumber": "000000000000000000",
                           "version": 3
                       }
                  },
                  "secondary": {
                      "info": {
                           "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                           "sha1Thumbprint": "0000000000000000000000000000000000",
                           "sha256Thumbprint": "validEnrollmentGroupId",
                           "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                           "notBeforeUtc": "2017-11-14T12:34:18Z",
                           "notAfterUtc": "2017-11-20T12:34:18Z",
                           "serialNumber": "000000000000000000",
                           "version": 3
                       }
                  }
              }
             </code>
             </example>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Certificates.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            Creates a new instance of the <code>X509Certificates</code> using the provided set of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/>.
            </remarks>
            <param name="primary">the <code>X509Certificate2</code> with the provisioning certificate and info. It cannot be <code>null</code>.</param>
            <param name="secondary">the <code>X509Certificate2</code> with the provisioning certificate and info. It can be <code>null</code>.</param>
            <exception cref="T:System.ArgumentException">if the provided certificate is <code>null</code>.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">if the provided certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Certificates.#ctor(System.String,System.String)">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            Creates a new instance of the <code>X509Certificates</code> using the provided set of certificate in Base64 string.
            </remarks>
            <param name="primary">the <code>string</code> with the provisioning certificate and info. It cannot be <code>null</code> or empty.</param>
            <param name="secondary">the <code>string</code> with the provisioning certificate and info. It can be <code>null</code> or empty.</param>
            <exception cref="T:System.ArgumentException">if the provided primary certificate is invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509Certificates.#ctor(Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo,Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo)">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            Creates a new instance of the <code>X509Certificates</code> using the provided set of certificates in the JSON.
            </remarks>
            <param name="primary">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo"/> with the provisioning certificate and info. It cannot be <code>null</code>.</param>
            <param name="secondary">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo"/> with the provisioning certificate and info. It can be <code>null</code>.</param>
            <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the provided primary certificate is invalid.</exception>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509Certificates.Primary">
            <summary>
            Primary certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509Certificates.Secondary">
            <summary>
            Secondary certificate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo">
             <summary>
             Representation of a single Device Provisioning Service X509 Certificate with its info.
             </summary>
             <remarks>
             This class creates a representation of an X509 certificate that can contains the certificate,
             the info of the certificate or both.
             </remarks>
             <example>
             The following JSON is an example of the result of this class.
             <code>
              {
                  "certificate": "-----BEGIN CERTIFICATE-----\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                                 "-----END CERTIFICATE-----\n";
              }
             </code>
            
             After send an X509 certificate to the provisioning service, it will return the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo"/>.
             User can get this info from this class,
            
             The following JSON is an example what info the provisioning service will return for X509.
             <code>
              {
                  "info": {
                       "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                       "sha1Thumbprint": "0000000000000000000000000000000000",
                       "sha256Thumbprint": "validEnrollmentGroupId",
                       "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
                       "notBeforeUtc": "2017-11-14T12:34:18Z",
                       "notAfterUtc": "2017-11-20T12:34:18Z",
                       "serialNumber": "000000000000000000",
                       "version": 3
                  }
              }
             </code>
             </example>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            This constructor will creates a new instance of the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo"/> using the 
            provided <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/>.
            </remarks>
            <param name="certificate"> the <code>X509Certificate2"</code> with the provisioning certificate. It cannot be <code>null</code>.</param>
            <exception cref="T:System.ArgumentException">if the provided certificate is <code>null</code>.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo.#ctor(System.String)">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            This constructor will creates a new instance of the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo"/> using the 
            provided Base64 string.
            </remarks>
            <param name="certificate">the <code>string</code> with the provisioning certificate. It cannot be <code>null</code> or invalid.</param>
            <exception cref="T:System.ArgumentException">if the provided certificate is <code>null</code>.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo.#ctor(System.String,Microsoft.Azure.Devices.Provisioning.Service.X509CertificateInfo)">
            <summary>
            CONSTRUCTOR
            </summary>
            <remarks>
            Creates a new instance of the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo"/> using the provided set of info in the JSON.
            This method will validate each parameter and the object consistence.
            </remarks>
            
            <param name="certificate">the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> with the provisioning certificate. It can be <code>null</code>.</param>
            <param name="info">the X509 certificate properties returned form the provisioning service.</param>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo.Certificate">
            <summary>
            Certificate
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.X509CertificateWithInfo.Info">
            <summary>
            Certificate properties.
            </summary> 
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ContractApiHttp.#ctor(System.Uri,Microsoft.Azure.Devices.Common.Service.Auth.IAuthorizationHeaderProvider,Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings)">
            <summary>
            CONSTRUCTOR
            </summary>
            <param name="baseAddress">the <code>Uri</code> HTTP endpoint in the service.</param>
            <param name="authenticationHeaderProvider">the <see cref="T:Microsoft.Azure.Devices.Common.Service.Auth.IAuthorizationHeaderProvider"/> that will provide the
                authorization token for the HTTP communication.</param>
            <param name="httpTransportSettings"> Specifies HTTP Transport Settings for the request</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ContractApiHttp.RequestAsync(System.Net.Http.HttpMethod,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unified HTTP request API
            </summary>
            <param name="httpMethod">the <see cref="T:System.Net.Http.HttpMethod"/> with the HTTP verb.</param>
            <param name="requestUri">the rest API <see cref="T:System.Uri"/> with for the requested service.</param>
            <param name="customHeaders">the optional <code>Dictionary</code> with additional header fields. It can be <code>null</code>.</param>
            <param name="body">the <code>string</code> with the message body. It can be <code>null</code> or empty.</param>
            <param name="ifMatch">the optional <code>string</code> with the match condition, normally an eTag. It can be <code>null</code>.</param>
            <param name="cancellationToken">the task cancellation Token.</param>
            <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ContractApiResponse"/> with the HTTP response.</returns>
            <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the cancellation was requested.</exception>
            <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">if there is a error in the HTTP communication
                between client and service.</exception>
            <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException">if the service answer the request with error status.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ContractApiHttp.Dispose">
            <summary>
            Release all HTTP resources.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.CorrelationId">
            <summary>
            Used in message responses and feedback
            Specifies the tracing correlation Id for the request; the resource provider *must* log this
            so that end-to-end requests can be correlated across Azure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.MessageId">
            <summary>
            [Required for two way requests] Used to correlate two-way communication.
            Format: A case-sensitive string ( up to 128 char long) of ASCII 7-bit alphanumeric chars
             + {'-', ':', '/', '\', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}.
            Non-alphanumeric characters are from URN RFC.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.SequenceNumber">
            <summary>
            iothub-sequencenumber
            A monotonically increasing identifier for each message
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.To">
            <summary>
            [Required] Destination of the message
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.EnqueuedTime">
            <summary>
            Time when the Message was received by the server
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.DeliveryCount">
            <summary>
            Number of times the message has been previously delivered
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ExpiryTime">
            <summary>
            [Optional] The time when this message is considered expired
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.UserId">
            <summary>
            [Required in feedback messages] Used to specify the origin of messages generated by IOT hub. Possible value: “{hub name}/”
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.Operation">
            <summary>
            [Optional] Used to specify the role of the message in the communication pattern.
            Possible values:
                “d2c”: telemetry message (device to cloud)
                “c2d”: notification
                “d2creq”: inquiry request
                “d2cres”: inquiry response
                “c2dreq”: command request
                “c2dres”: command response
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.Ack">
            <summary>
            [Optional] Used to specify the feedback required for the consumption of the message by the device.
            Possible values:
                “none”: no feedback
                “positive”: receive a feedback message if the message was consumed
                “negative”: receive a feedback message if the message expired without being completed by the device
                “full”: both positive and negative
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.MessageLockToken">
            <summary>
            The lock token of the retrieved message
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.MessageLockTimeout">
            <summary>
            Amount of time in seconds to lock message before abandoning the lock and allowing the message to be retrieved again
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.HttpAppPropertyPrefix">
            <summary>
            Prefix for all Application property Http Headers
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.HttpIotHubName">
            <summary>
            Internal HTTP custom headers
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ClientIpAddress">
            <summary>
            x-ms-client-ip-address
            Set to the client IP address used in the request; this is required since the resource provider
            will not have access to the client IP.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.PrincipalName">
            <summary>
            x-ms-client-principal-name
            Set to the principal Id / UPN of the client JWT making the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ClientTenantId">
            <summary>
            x-ms-client-tenant-id
            Set to the tenant Id of the client JWT making the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ClientAudience">
            <summary>
            x-ms-client-audience
            Set to the tenant Id of the client JWT making the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ClientIssuer">
            <summary>
            x-ms-client-issuer
            Set to the issuer of the client JWT making the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ClientObjectId">
            <summary>
            x-ms-client-object-id
            Set to the object Id of the client JWT making the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ClientAppId">
            <summary>
            x-ms-client-app-id
            Set to the app Id of the client JWT making the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ClientRequestId">
            <summary>
            x-ms-client-request-id
            Caller-specified request Id, in the form of a GUID with no decoration such as curly braces
            (e.g. client-request-id: 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0).
            A caller-defined value that identifies the given request.   If specified, this will be
            included in response information as a way to map the request.
            If the caller provides this header – the resource provider *must* log this with their
            traces to facilitate tracing a single request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ReturnClientRequestId">
            <summary>
            x-ms-return-client-request-id
            Optional
            True or false and indicates if a client-request-id should be provided.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ActivityId">
            <summary>
            x-ms-activity-id
            The value that is used to pass activityID in REST API between services
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.ApiVersion">
            <summary>
            api-version
            Specifies the version of the protocol used to make this request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.MicrosoftAsyncOperationHeaderName">
            <summary>
            Azure-AsyncOperation
            Set to the URL where the result of the long running operation can be checked; to optionally be used in addition to the Location header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Devices.Provisioning.Service.CustomHeaderConstants.RequestId">
            <summary>
            x-ms-request-id
            A unique identifier for the current operation, service generated.
            All the resource providers *must* return this value in the response headers to facilitate debugging.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">
            <summary>
            Super class for the Device Provisioning Service exceptions on the Service Client.
            </summary>
            <remarks>
            <code>
            ProvisioningServiceClientException
               |        \__IsTransient [identify if retry is a valid scenario]
               |
               +-->ProvisioningServiceClientTransportException [any transport layer exception]
                    |
                    +-->ProvisioningServiceClientHttpException [any exception reported in the HTTP response]
            </code>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException.IsTransient">
            <summary>
            True if the error is transient.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException.#ctor">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/> exception type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/> exception type.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/> exception type.
            </summary>
            <param name="message">The message.</param>
            <param name="isTransient">True if the error is transient and the operation should be retried.</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException.#ctor(System.Exception)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/> exception type.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/> exception type.
            </summary>
            <param name="message">The message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException.#ctor(System.String,System.Exception,System.Boolean)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/> exception type.
            </summary>
            <param name="message">The message</param>
            <param name="innerException">The inner exception</param>
            <param name="isTransient">True if the error is transient and the operation should be retried.</param>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException">
            <summary>
            This is the subset of the Device Provisioning Service exceptions for the exceptions reported by the Service. 
            </summary>
            <remarks>
            This exception identify that the provisioning service respond the HTTP request with a error status code.
            <code>
            ProvisioningServiceClientHttpException [any exception reported in the HTTP response]
                \ \ \ \__StatusCode [the returned HTTP status code]
                 \ \ \___ErrorMessage [the root cause of the error]
                  \ \____Body [the HTTP message body with details about the error]
                   \_____Filds [the HTTP head fields that may provide more details about the error]
               
            </code>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException.StatusCode">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException.Body">
            <summary>
            The HTTP body.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException.Fields">
            <summary>
            The HTTP headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException.ErrorMessage">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException.#ctor">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientHttpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">
            <summary>
            Transport-level exception during provisioning service operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException.#ctor">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="isTransient">True if the operation should be retried.</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings">
            <summary>
            contains Http1 transport-specific settings for Service Client
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings.#ctor">
            <summary>
            Creates an instance of Http1TransportSettings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings.Proxy">
            <summary>
            Gets or sets proxy information for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollmentManager">
            <summary>
            IndividualEnrollment Manager.
            </summary>
            <remarks>
            This is the inner class that implements the IndividualEnrollment APIs.
            For the public API, please see <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient">
             <summary>
             Device Provisioning Service Client.
             </summary>
             <remarks>
             The IoT Hub Device Provisioning Service is a helper service for IoT Hub that enables automatic device
                 provisioning to a specified IoT hub without requiring human intervention. You can use the Device Provisioning
                 Service to provision millions of devices in a secure and scalable manner.
            
             This C# SDK provides an API to help developers to create and maintain Enrollments on the IoT Hub Device
                 Provisioning Service, it translate the rest API in C# Objects and Methods.
            
             To use the this SDK, you must include the follow package on your application.
             <code>
             // Include the following using to use the Device Provisioning Service APIs.
             using Microsoft.Azure.Devices.Provisioning.Service;
             </code>
            
             The main APIs are exposed by the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient"/>, it contains the public Methods that the
                 application shall call to create and maintain the Enrollments. The Objects in the <b>configs</b> package shall
                 be filled and passed as parameters of the public API, for example, to create a new enrollment, the application
                 shall create the object <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> with the appropriate enrollment configurations, and call the
                 <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateOrUpdateIndividualEnrollmentAsync(Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment)"/>.
            
             The IoT Hub Device Provisioning Service supports SQL queries too. The application can create a new query using
                 one of the queries factories, for instance <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>, passing
                 the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, with the SQL query. This factory returns a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> object, which is an
                 active iterator.
            
             This C# SDK can be represented in the follow diagram, the first layer are the public APIs the your application
                 shall use:
            
             <code>
             +===============+       +==========================================+                           +============+   +===+
             |    configs    |------>|         ProvisioningServiceClient        |                        +->|    Query   |   |   |
             +===============+       +==+=================+==================+==+                        |  +======+=====+   | e |
                                       /                  |                   \                          |         |         | x |
                                      /                   |                    \                         |         |         | c |
             +-----------------------+-----+  +-----------+------------+  +-----+---------------------+  |         |         | e |
             | IndividualEnrollmentManager |  | EnrollmentGroupManager |  | RegistrationStatusManager |  |         |         | p |
             +---------------+------+------+  +-----------+------+-----+  +-------------+-------+-----+  |         |         | t |
                              \      \                    |       \                     |        \       |         |         | i |
                               \      +----------------------------+------------------------------+------+         |         | o |
                                \                         |                             |                          |         | n |
              +--------+      +--+------------------------+-----------------------------+--------------------------+-----+   | s |
              |  auth  |----->|                                    IContractApiHttp                                      |   |   |
              +--------+      +-------------------------------------------+----------------------------------------------+   +===+
                                                                          |
                                                                          |
                                    +-------------------------------------+------------------------------------------+
                                    |                              System.Net.Http                                   |
                                    +--------------------------------------------------------------------------------+
             </code>
             </remarks>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateFromConnectionString(System.String)">
             <summary>
             Create a new instance of the <code>ProvisioningServiceClient</code> that exposes
             the API to the Device Provisioning Service.
             </summary>
             <remarks>
             The Device Provisioning Service Client is created based on a <b>Provisioning Connection string</b>.
             Once you create a Device Provisioning Service on Azure, you can get the connection string on the Azure portal.
             </remarks>
            
             <param name="connectionString">the <code>string</code> that cares the connection string of the Device Provisioning Service.</param>
             <returns>The <code>ProvisioningServiceClient</code> with the new instance of this object.</returns>
             <exception cref="T:System.ArgumentException">if the connectionString is <code>null</code> or empty.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings)">
             <summary>
             Create a new instance of the <code>ProvisioningServiceClient</code> that exposes
             the API to the Device Provisioning Service.
             </summary>
             <remarks>
             The Device Provisioning Service Client is created based on a <b>Provisioning Connection string</b>.
             Once you create a Device Provisioning Service on Azure, you can get the connection string on the Azure portal.
             </remarks>
            
             <param name="connectionString">the <code>string</code> that cares the connection string of the Device Provisioning Service.</param>
             <param name="httpTransportSettings"> Specifies the HTTP transport settings for the request</param>
             <returns>The <code>ProvisioningServiceClient</code> with the new instance of this object.</returns>
             <exception cref="T:System.ArgumentException">if the connectionString is <code>null</code> or empty.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.#ctor(System.String,Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings)">
            <summary>
            PRIVATE CONSTRUCTOR
            </summary>
            <param name="connectionString">the <code>string</code> that contains the connection string for the Provisioning service.</param>
            <param name="httpTransportSettings">Specifies the HTTP transport settings for the request</param>
            <exception cref="T:System.ArgumentException">if the connectionString is <code>null</code>, empty, or invalid.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.Dispose">
            <summary>
            Dispose the Provisioning Service Client and its dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateOrUpdateIndividualEnrollmentAsync(Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment)">
             <summary>
             Create or update a individual Device Enrollment record.
             </summary>
             <remarks>
             This API creates a new individualEnrollment or update a existed one. All enrollments in the Device Provisioning Service
                 contains a unique identifier called registrationId. If this API is called for an individualEnrollment with a
                 registrationId that already exists, it will replace the existed individualEnrollment information by the new one.
                 On the other hand, if the registrationId does not exit, this API will create a new individualEnrollment.
            
             If the registrationId already exists, this method will update existed enrollments. Note that update the
                 individualEnrollment will not change the status of the device that was already registered using the old individualEnrollment.
            
             To use the Device Provisioning Service API, you must include the follow package on your application.
             <code>
             // Include the following using to use the Device Provisioning Service APIs.
             using Microsoft.Azure.Devices.Provisioning.Service;
             </code>
             </remarks>
             <example>
             The follow code will create a new individualEnrollment that will provisioning the registrationid-1 using TPM attestation.
             <code>
             // IndividualEnrollment information.
             private const string PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                   "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                   "SharedAccessKey=dGVzdFN0cmluZzE=";
             private const string TPM_ENDORSEMENT_KEY = "tpm-endorsement-key";
             private const string REGISTRATION_ID = "registrationid-1";
            
             static void Main(string[] args)
             {
                 RunSample().GetAwaiter().GetResult();
             }
            
             public static async Task RunSample()
             {
                 using(ProvisioningServiceClient provisioningServiceClient =
                         ProvisioningServiceClient.CreateFromConnectionString(PROVISIONING_CONNECTION_STRING))
                 {
                     // ************************************ Create the individualEnrollment ****************************************
                     Console.WriteLine("\nCreate a new individualEnrollment...");
                     Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);
                     IndividualEnrollment individualEnrollment =
                         new IndividualEnrollment(
                             REGISTRATION_ID,
                             attestation);
                     individualEnrollment.ProvisioningStatus = ProvisioningStatus.Disabled;
                     IndividualEnrollment individualEnrollmentResult =
                         await provisioningServiceClient.CreateOrUpdateIndividualEnrollmentAsync(individualEnrollment).ConfigureAwait(false);
                     Console.WriteLine("\nIndividualEnrollment created with success...");
                 }
             }
             </code>
            
             The follow code will update the provisioningStatus of the previous individualEnrollment from <b>disabled</b> to <b>enabled</b>.
             <code>
             // IndividualEnrollment information.
             private const string PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                          "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                          "SharedAccessKey=dGVzdFN0cmluZzE=";
             private const string REGISTRATION_ID = "registrationid-1";
            
             static void Main(string[] args)
             {
                 RunSample().GetAwaiter().GetResult();
             }
            
             public static async Task RunSample()
             {
                 using(ProvisioningServiceClient provisioningServiceClient =
                         ProvisioningServiceClient.CreateFromConnectionString(PROVISIONING_CONNECTION_STRING))
                 {
                     // ************************* Get the content of the previous individualEnrollment ******************************
                     Console.WriteLine("\nGet the content of the previous individualEnrollment...");
                     Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);
                     IndividualEnrollment individualEnrollment =
                         await deviceProvisioningServiceClient.GetIndividualEnrollmentAsync(REGISTRATION_ID).ConfigureAwait(false);
                     individualEnrollment.ProvisioningStatus = ProvisioningStatus.Enabled;
                     IndividualEnrollment individualEnrollmentResult =
                         await provisioningServiceClient.CreateOrUpdateIndividualEnrollmentAsync(individualEnrollment).ConfigureAwait(false);
                     Console.WriteLine("\nIndividualEnrollment updated with success...");
                 }
             }
             </code>
             </example>
            
             <param name="individualEnrollment">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> object that describes the individualEnrollment that will be created of updated. It cannot be <code>null</code>.</param>
             <returns>An <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> object with the result of the create or update requested.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameter is not correct.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">if the SDK failed to send the request to the Device Provisioning Service.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Device Provisioning Service was not able to create or update the individualEnrollment.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateOrUpdateIndividualEnrollmentAsync(Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an individual enrollment.
            </summary>
            <param name="individualEnrollment">The individual enrollment object.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.RunBulkEnrollmentOperationAsync(Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment})">
             <summary>
             Create, update or delete a set of individual Device Enrollments.
             </summary>
             <remarks>
             This API provide the means to do a single operation over multiple individualEnrollments. A valid operation
                 is determined by <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode"/>, and can be 'create', 'update', 'updateIfMatchETag', or 'delete'.
             </remarks>
            
             <param name="bulkOperationMode">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode"/> that defines the single operation to do over the individualEnrollments. It cannot be <code>null</code>.</param>
             <param name="individualEnrollments">the collection of <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> that contains the description of each individualEnrollment. It cannot be <code>null</code> or empty.</param>
             <returns>A <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationResult"/> object with the result of operation for each enrollment.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">if the SDK failed to send the request to the Device Provisioning Service.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Device Provisioning Service was not able to execute the bulk operation.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.RunBulkEnrollmentOperationAsync(Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment},System.Threading.CancellationToken)">
             <summary>
             Create, update or delete a set of individual Device Enrollments.
             </summary>
             <remarks>
             This API provide the means to do a single operation over multiple individualEnrollments. A valid operation
                 is determined by <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode"/>, and can be 'create', 'update', 'updateIfMatchETag', or 'delete'.
             </remarks>
            
             <param name="bulkOperationMode">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.BulkOperationMode"/> that defines the single operation to do over the individualEnrollments. It cannot be <code>null</code>.</param>
             <param name="individualEnrollments">the collection of <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> that contains the description of each individualEnrollment. It cannot be <code>null</code> or empty.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>A <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.BulkEnrollmentOperationResult"/> object with the result of operation for each enrollment.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">if the SDK failed to send the request to the Device Provisioning Service.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Device Provisioning Service was not able to execute the bulk operation.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.GetIndividualEnrollmentAsync(System.String)">
             <summary>
             Retrieve the individualEnrollment information.
             </summary>
             <remarks>
             This method will return the enrollment information for the provided registrationId. It will retrieve
                 the correspondent individualEnrollment from the Device Provisioning Service, and return it in the
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> object.
            
             If the registrationId do not exists, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="registrationId">the <code>string} that identifies the individualEnrollment. It cannot be {@code null</code> or empty.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> with the content of the individualEnrollment in the Provisioning Device Service.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameter is not correct.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">if the SDK failed to send the request to the Device Provisioning Service.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Device Provisioning Service was not able to execute the bulk operation.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.GetIndividualEnrollmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the individual enrollment object.
            </summary>
            <param name="registrationId">The registration Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteIndividualEnrollmentAsync(Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment)">
             <summary>
             Delete the individualEnrollment information.
             </summary>
             <remarks>
             This method will remove the individualEnrollment from the Device Provisioning Service using the
                 provided <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> information. The Device Provisioning Service will care about the
                 registrationId and the eTag on the individualEnrollment. If you want to delete the individualEnrollment regardless the
                 eTag, you can set the <code>eTag="*"} into the individualEnrollment, or use the {@link #deleteIndividualEnrollment(string)</code>
                 passing only the registrationId.
            
             Note that delete the individualEnrollment will not remove the Device itself from the IotHub.
            
             If the registrationId does not exists or the eTag not matches, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="individualEnrollment">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment"/> that identifies the individualEnrollment. It cannot be <code>null</code>.</param>
             <exception cref="T:System.ArgumentException">if the provided parameter is not correct.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">if the SDK failed to send the request to the Device Provisioning Service.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Device Provisioning Service was not able to execute the bulk operation.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteIndividualEnrollmentAsync(Microsoft.Azure.Devices.Provisioning.Service.IndividualEnrollment,System.Threading.CancellationToken)">
            <summary>
            Deletes an individual enrollment.
            </summary>
            <param name="individualEnrollment">The individual enrollment.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteIndividualEnrollmentAsync(System.String)">
             <summary>
             Delete the individualEnrollment information.
             </summary>
             <remarks>
             This method will remove the individualEnrollment from the Device Provisioning Service using the
                 provided registrationId. It will delete the enrollment regardless the eTag. It means that this API
                 correspond to the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteIndividualEnrollmentAsync(System.String,System.String)"/> with the <code>eTag="*"</code>.
            
             Note that delete the enrollment will not remove the Device itself from the IotHub.
            
             If the registrationId does not exists, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="registrationId">the <code>string} that identifies the individualEnrollment. It cannot be {@code null</code> or empty.</param>
             <exception cref="T:System.ArgumentException">if the provided registrationId is not correct.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">if the SDK failed to send the request to the Device Provisioning Service.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Device Provisioning Service was not able to execute the bulk operation.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteIndividualEnrollmentAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             Delete the individualEnrollment information.
             </summary>
             <remarks>
             This method will remove the individualEnrollment from the Device Provisioning Service using the
                 provided registrationId. It will delete the enrollment regardless the eTag. It means that this API
                 correspond to the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteIndividualEnrollmentAsync(System.String,System.String)"/> with the <code>eTag="*"</code>.
            
             Note that delete the enrollment will not remove the Device itself from the IotHub.
            
             If the registrationId does not exists, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="registrationId">the <code>string} that identifies the individualEnrollment. It cannot be {@code null</code> or empty.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <exception cref="T:System.ArgumentException">if the provided registrationId is not correct.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">if the SDK failed to send the request to the Device Provisioning Service.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Device Provisioning Service was not able to execute the bulk operation.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteIndividualEnrollmentAsync(System.String,System.String)">
             <summary>
             Delete the individualEnrollment information.
             </summary>
             <remarks>
             This method will remove the individualEnrollment from the Device Provisioning Service using the
                 provided registrationId and eTag. If you want to delete the enrollment regardless the eTag, you can
                 use <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteIndividualEnrollmentAsync(System.String)"/> or you can pass the eTag as <code>null</code>, empty, or
                 <code>"*"</code>.
            
             Note that delete the enrollment will not remove the Device itself from the IotHub.
            
             If the registrationId does not exists or the eTag does not matches, this method will throw
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>. For more exceptions that this method can throw, please see
             </remarks>
             <param name="registrationId">the <code>string</code> that identifies the individualEnrollment. It cannot be <code>null</code> or empty.</param>
             <param name="eTag">the <code>string</code> with the IndividualEnrollment eTag. It can be <code>null</code> or empty.
                         The Device Provisioning Service will ignore it in all of these cases.</param>
             <exception cref="T:System.ArgumentException">if the provided registrationId is not correct.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientTransportException">if the SDK failed to send the request to the Device Provisioning Service.</exception>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Device Provisioning Service was not able to execute the bulk operation.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteIndividualEnrollmentAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an individual enrollment if the eTag matches.
            </summary>
            <param name="registrationId">The registration id</param>
            <param name="eTag">The eTag.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)">
             <summary>
             Factory to create a individualEnrollment query.
             </summary>
             <remarks>
             This method will create a new individualEnrollment query for Device Provisioning Service and return it
                 as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameter is not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings)">
             <summary>
             Factory to create a individualEnrollment query.
             </summary>
             <remarks>
             This method will create a new individualEnrollment query for Device Provisioning Service and return it
                 as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="httpTransportSettings"> Specifies the HTTP transport settings</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameter is not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Threading.CancellationToken)">
             <summary>
             Factory to create a individualEnrollment query.
             </summary>
             <remarks>
             This method will create a new individualEnrollment query for Device Provisioning Service and return it
                 as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameter is not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Int32)">
             <summary>
             Factory to create a individualEnrollment query.
             </summary>
             <remarks>
             This method will create a new individualEnrollment query for Device Provisioning Service and return it
                 as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
            
             For each iteration, the Query will return a List of objects correspondent to the query result. The maximum
                 number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for
                 default pageSize or use the API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="pageSize">the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Int32,System.Threading.CancellationToken)">
             <summary>
             Factory to create a individualEnrollment query.
             </summary>
             <remarks>
             This method will create a new individualEnrollment query for Device Provisioning Service and return it
                 as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
            
             For each iteration, the Query will return a List of objects correspondent to the query result. The maximum
                 number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for
                 default pageSize or use the API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="pageSize">the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Int32,Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings)">
             <summary>
             Factory to create a individualEnrollment query.
             </summary>
             <remarks>
             This method will create a new individualEnrollment query for Device Provisioning Service and return it
                 as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
            
             For each iteration, the Query will return a List of objects correspondent to the query result. The maximum
                 number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for
                 default pageSize or use the API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="pageSize">the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.</param>
             <param name="httpTransportSettings"> Specifies the HTTP transport settings</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateOrUpdateEnrollmentGroupAsync(Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup)">
             <summary>
             Create or update an enrollment group record.
             </summary>
             <remarks>
             This API creates a new enrollment group or update a existed one. All enrollment group in the Device
                 Provisioning Service contains a unique identifier called enrollmentGroupId. If this API is called
                 with an enrollmentGroupId that already exists, it will replace the existed enrollmentGroup information
                 by the new one. On the other hand, if the enrollmentGroupId does not exit, it will be created.
            
             To use the Device Provisioning Service API, you must include the follow package on your application.
             <code>
             // Include the following using to use the Device Provisioning Service APIs.
             using Microsoft.Azure.Devices.Provisioning.Service;
             </code>
             </remarks>
            
             <param name="enrollmentGroup">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> object that describes the individualEnrollment that will be created of updated.</param>
             <returns>An <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> object with the result of the create or update requested.</returns>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning was not able to create or update the enrollment.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateOrUpdateEnrollmentGroupAsync(Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup,System.Threading.CancellationToken)">
             <summary>
             Create or update an enrollment group record.
             </summary>
             <remarks>
             This API creates a new enrollment group or update a existed one. All enrollment group in the Device
                 Provisioning Service contains a unique identifier called enrollmentGroupId. If this API is called
                 with an enrollmentGroupId that already exists, it will replace the existed enrollmentGroup information
                 by the new one. On the other hand, if the enrollmentGroupId does not exit, it will be created.
            
             To use the Device Provisioning Service API, you must include the follow package on your application.
             <code>
             // Include the following using to use the Device Provisioning Service APIs.
             using Microsoft.Azure.Devices.Provisioning.Service;
             </code>
             </remarks>
            
             <param name="enrollmentGroup">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> object that describes the individualEnrollment that will be created of updated.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>An <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> object with the result of the create or update requested.</returns>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning was not able to create or update the enrollment.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.GetEnrollmentGroupAsync(System.String)">
             <summary>
             Retrieve the enrollmentGroup information.
             </summary>
             <remarks>
             This method will return the enrollmentGroup information for the provided enrollmentGroupId. It will retrieve
                 the correspondent enrollmentGroup from the Device Provisioning Service, and return it in the
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> object.
            
             If the enrollmentGroupId does not exists, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> with the content of the enrollmentGroup in the Provisioning Device Service.</returns>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to retrieve the enrollmentGroup information for the provided enrollmentGroupId.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.GetEnrollmentGroupAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             Retrieve the enrollmentGroup information.
             </summary>
             <remarks>
             This method will return the enrollmentGroup information for the provided enrollmentGroupId. It will retrieve
                 the correspondent enrollmentGroup from the Device Provisioning Service, and return it in the
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> object.
            
             If the enrollmentGroupId does not exists, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> with the content of the enrollmentGroup in the Provisioning Device Service.</returns>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to retrieve the enrollmentGroup information for the provided enrollmentGroupId.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup)">
             <summary>
             Delete the enrollmentGroup information.
             </summary>
             <remarks>
             This method will remove the enrollmentGroup from the Device Provisioning Service using the
                 provided <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> information. The Device Provisioning Service will care about the
                 enrollmentGroupId and the eTag on the enrollmentGroup. If you want to delete the enrollment regardless the
                 eTag, you can set the <code>eTag="*"</code> into the enrollmentGroup, or use the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String)"/>.
                 passing only the enrollmentGroupId.
            
             Note that delete the enrollmentGroup will not remove the Devices itself from the IotHub.
            
             If the enrollmentGroupId does not exists or the eTag does not matches, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="enrollmentGroup">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> that identifies the enrollmentGroup. It cannot be <code>null</code>.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the enrollmentGroup information for the provided enrollmentGroup.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup,System.Threading.CancellationToken)">
             <summary>
             Delete the enrollmentGroup information.
             </summary>
             <remarks>
             This method will remove the enrollmentGroup from the Device Provisioning Service using the
                 provided <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> information. The Device Provisioning Service will care about the
                 enrollmentGroupId and the eTag on the enrollmentGroup. If you want to delete the enrollment regardless the
                 eTag, you can set the <code>eTag="*"</code> into the enrollmentGroup, or use the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String)"/>.
                 passing only the enrollmentGroupId.
            
             Note that delete the enrollmentGroup will not remove the Devices itself from the IotHub.
            
             If the enrollmentGroupId does not exists or the eTag does not matches, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="enrollmentGroup">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.EnrollmentGroup"/> that identifies the enrollmentGroup. It cannot be <code>null</code>.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the enrollmentGroup information for the provided enrollmentGroup.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String)">
             <summary>
             Delete the enrollmentGroup information.
             </summary>
             <remarks>
             This method will remove the enrollmentGroup from the Device Provisioning Service using the
                 provided enrollmentGroupId. It will delete the enrollmentGroup regardless the eTag. It means that this API
                 correspond to the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String,System.String)"/> with the <code>eTag="*"</code>.
            
             Note that delete the enrollmentGroup will not remove the Devices itself from the IotHub.
            
             If the enrollmentGroupId does not exists, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the enrollmentGroup information for the provided enrollmentGroupId.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             Delete the enrollmentGroup information.
             </summary>
             <remarks>
             This method will remove the enrollmentGroup from the Device Provisioning Service using the
                 provided enrollmentGroupId. It will delete the enrollmentGroup regardless the eTag. It means that this API
                 correspond to the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String,System.String)"/> with the <code>eTag="*"</code>.
            
             Note that delete the enrollmentGroup will not remove the Devices itself from the IotHub.
            
             If the enrollmentGroupId does not exists, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the enrollmentGroup information for the provided enrollmentGroupId.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String,System.String)">
             <summary>
             Delete the enrollmentGroup information.
             </summary>
             <remarks>
             This method will remove the enrollmentGroup from the Device Provisioning Service using the
                 provided enrollmentGroupId and eTag. If you want to delete the enrollmentGroup regardless the eTag, you can
                 use <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String)"/> or you can pass the eTag as <code>null</code>, empty, or
                 <code>"*"</code>.
            
             Note that delete the enrollmentGroup will not remove the Device itself from the IotHub.
            
             If the enrollmentGroupId does not exists or eTag does not matches, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <param name="eTag">the <code>string</code> with the enrollmentGroup eTag. It can be <code>null</code> or empty.
                         The Device Provisioning Service will ignore it in all of these cases.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the enrollmentGroup information for the provided enrollmentGroupId and eTag.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Delete the enrollmentGroup information.
             </summary>
             <remarks>
             This method will remove the enrollmentGroup from the Device Provisioning Service using the
                 provided enrollmentGroupId and eTag. If you want to delete the enrollmentGroup regardless the eTag, you can
                 use <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteEnrollmentGroupAsync(System.String)"/> or you can pass the eTag as <code>null</code>, empty, or
                 <code>"*"</code>.
            
             Note that delete the enrollmentGroup will not remove the Device itself from the IotHub.
            
             If the enrollmentGroupId does not exists or eTag does not matches, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <param name="eTag">the <code>string</code> with the enrollmentGroup eTag. It can be <code>null</code> or empty.
                         The Device Provisioning Service will ignore it in all of these cases.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the enrollmentGroup information for the provided enrollmentGroupId and eTag.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)">
             <summary>
             Factory to create an enrollmentGroup query.
             </summary>
             <remarks>
             This method will create a new enrollment group query on Device Provisioning Service and return it as
                 a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameter is not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings)">
             <summary>
             Factory to create an enrollmentGroup query.
             </summary>
             <remarks>
             This method will create a new enrollment group query on Device Provisioning Service and return it as
                 a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="httpTransportSettings"> Specifies the HTTP transport settings</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameter is not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Threading.CancellationToken)">
             <summary>
             Factory to create an enrollmentGroup query.
             </summary>
             <remarks>
             This method will create a new enrollment group query on Device Provisioning Service and return it as
                 a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameter is not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Int32)">
             <summary>
             Factory to create an enrollmentGroup query.
             </summary>
             <remarks>
             This method will create a new enrollment group query on Device Provisioning Service and return it as
                 a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
            
             For each iteration, the Query will return a List of objects correspondent to the query result. The maximum
                 number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for
                 default pageSize or use the API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="pageSize">the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Int32,System.Threading.CancellationToken)">
             <summary>
             Factory to create an enrollmentGroup query.
             </summary>
             <remarks>
             This method will create a new enrollment group query on Device Provisioning Service and return it as
                 a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
            
             For each iteration, the Query will return a List of objects correspondent to the query result. The maximum
                 number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for
                 default pageSize or use the API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="pageSize">the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Int32,Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings)">
             <summary>
             Factory to create an enrollmentGroup query.
             </summary>
             <remarks>
             This method will create a new enrollment group query on Device Provisioning Service and return it as
                 a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
            
             For each iteration, the Query will return a List of objects correspondent to the query result. The maximum
                 number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for
                 default pageSize or use the API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="pageSize">the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.</param>
             <param name="httpTransportSettings"> Specifies the HTTP transport settings</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.GetDeviceRegistrationStateAsync(System.String)">
             <summary>
             Retrieve the registration status information.
             </summary>
             <remarks>
             This method will return the DeviceRegistrationState for the provided id. It will retrieve
                 the correspondent DeviceRegistrationState from the Device Provisioning Service, and return it in the
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/> object.
            
             If the id does not exist, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="id">the <code>string</code> that identifies the DeviceRegistrationState. It cannot be <code>null</code> or empty.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/> with the content of the DeviceRegistrationState in the Provisioning Device Service.</returns>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to retrieve the DeviceRegistrationState information for the provided registrationId.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.GetDeviceRegistrationStateAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             Retrieve the registration status information.
             </summary>
             <remarks>
             This method will return the DeviceRegistrationState for the provided id. It will retrieve
                 the correspondent DeviceRegistrationState from the Device Provisioning Service, and return it in the
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/> object.
            
             If the id does not exist, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="id">the <code>string</code> that identifies the DeviceRegistrationState. It cannot be <code>null</code> or empty.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/> with the content of the DeviceRegistrationState in the Provisioning Device Service.</returns>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to retrieve the DeviceRegistrationState information for the provided registrationId.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState)">
             <summary>
             Delete the registration status information.
             </summary>
             <remarks>
             This method will remove the DeviceRegistrationState from the Device Provisioning Service using the
                 provided <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/> information. The Device Provisioning Service will care about the
                 id and the eTag on the DeviceRegistrationState. If you want to delete the DeviceRegistrationState regardless the
                 eTag, you can use the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String)"/> passing only the id.
            
             If the id does not exists or the eTag does not matches, this method will throw
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="deviceRegistrationState">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/> that identifies the DeviceRegistrationState. It cannot be <code>null</code>.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the registration status information for the provided DeviceRegistrationState.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState,System.Threading.CancellationToken)">
             <summary>
             Delete the registration status information.
             </summary>
             <remarks>
             This method will remove the DeviceRegistrationState from the Device Provisioning Service using the
                 provided <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/> information. The Device Provisioning Service will care about the
                 id and the eTag on the DeviceRegistrationState. If you want to delete the DeviceRegistrationState regardless the
                 eTag, you can use the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String)"/> passing only the id.
            
             If the id does not exists or the eTag does not matches, this method will throw
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="deviceRegistrationState">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.DeviceRegistrationState"/> that identifies the DeviceRegistrationState. It cannot be <code>null</code>.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the registration status information for the provided DeviceRegistrationState.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String)">
             <summary>
             Delete the registration status information.
             </summary>
             <remarks>
             This method will remove the DeviceRegistrationState from the Device Provisioning Service using the
                 provided id. It will delete the registration status regardless the eTag. It means that this API
                 correspond to the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String,System.String)"/> with the <code>eTag="*"</code>.
            
             If the id does not exists, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="id">the <code>string</code> that identifies the DeviceRegistrationState. It cannot be <code>null</code> or empty.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the DeviceRegistrationState information for the provided registrationId.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             Delete the registration status information.
             </summary>
             <remarks>
             This method will remove the DeviceRegistrationState from the Device Provisioning Service using the
                 provided id. It will delete the registration status regardless the eTag. It means that this API
                 correspond to the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String,System.String)"/> with the <code>eTag="*"</code>.
            
             If the id does not exists, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="id">the <code>string</code> that identifies the DeviceRegistrationState. It cannot be <code>null</code> or empty.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the DeviceRegistrationState information for the provided registrationId.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String,System.String)">
             <summary>
             Delete the registration status information.
             </summary>
             <remarks>
             This method will remove the registration status from the Device Provisioning Service using the
                 provided id and eTag. If you want to delete the registration status regardless the eTag, you can
                 use <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String)"/> or you can pass the eTag as <code>null</code>, empty, or
                 <code>"*"</code>.
            
             If the id does not exists or the eTag does not matches, this method will throw
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="id">the <code>string</code> that identifies the DeviceRegistrationState. It cannot be <code>null</code> or empty.</param>
             <param name="eTag">the <code>string</code> with the DeviceRegistrationState eTag. It can be <code>null</code> or empty.
                         The Device Provisioning Service will ignore it in all of these cases.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the DeviceRegistrationState information for the provided registrationId and eTag.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Delete the registration status information.
             </summary>
             <remarks>
             This method will remove the registration status from the Device Provisioning Service using the
                 provided id and eTag. If you want to delete the registration status regardless the eTag, you can
                 use <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.DeleteDeviceRegistrationStateAsync(System.String)"/> or you can pass the eTag as <code>null</code>, empty, or
                 <code>"*"</code>.
            
             If the id does not exists or the eTag does not matches, this method will throw
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
             </remarks>
             <param name="id">the <code>string</code> that identifies the DeviceRegistrationState. It cannot be <code>null</code> or empty.</param>
             <param name="eTag">the <code>string</code> with the DeviceRegistrationState eTag. It can be <code>null</code> or empty.
                         The Device Provisioning Service will ignore it in all of these cases.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <exception cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException">if the Provisioning Device Service was not able to delete the DeviceRegistrationState information for the provided registrationId and eTag.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupRegistrationStateQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.String)">
             <summary>
             Factory to create a registration status query.
             </summary>
             <remarks>
             This method will create a new registration status query for a specific enrollment group on the Device
                 Provisioning Service and return it as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupRegistrationStateQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.String,Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings)">
             <summary>
             Factory to create a registration status query.
             </summary>
             <remarks>
             This method will create a new registration status query for a specific enrollment group on the Device
                 Provisioning Service and return it as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <param name="httpTransportSettings"> Specifies the HTTP transport settings</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupRegistrationStateQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.String,System.Threading.CancellationToken)">
             <summary>
             Factory to create a registration status query.
             </summary>
             <remarks>
             This method will create a new registration status query for a specific enrollment group on the Device
                 Provisioning Service and return it as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupRegistrationStateQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.String,System.Int32)">
             <summary>
             Factory to create a registration status query.
             </summary>
             <remarks>
             This method will create a new registration status query for a specific enrollment group on the Device
                 Provisioning Service and return it as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
            
             For each iteration, the Query will return a List of objects correspondent to the query result. The maximum
                 number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for
                 default pageSize or use the API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <param name="pageSize">the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupRegistrationStateQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.String,System.Int32,Microsoft.Azure.Devices.Provisioning.Service.HttpTransportSettings)">
             <summary>
             Factory to create a registration status query.
             </summary>
             <remarks>
             This method will create a new registration status query for a specific enrollment group on the Device
                 Provisioning Service and return it as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
            
             For each iteration, the Query will return a List of objects correspondent to the query result. The maximum
                 number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for
                 default pageSize or use the API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <param name="pageSize">the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.</param>
             <param name="httpTransportSettings"> Specifies the HTTP transport settings</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupRegistrationStateQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.String,System.Int32,System.Threading.CancellationToken)">
             <summary>
             Factory to create a registration status query.
             </summary>
             <remarks>
             This method will create a new registration status query for a specific enrollment group on the Device
                 Provisioning Service and return it as a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.
            
             The Device Provisioning Service expects a SQL query in the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/>, for instance
                 <code>"SELECT * FROM enrollments"</code>.
            
             For each iteration, the Query will return a List of objects correspondent to the query result. The maximum
                 number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for
                 default pageSize or use the API <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification)"/>.
             </remarks>
             <param name="querySpecification">the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> with the SQL query. It cannot be <code>null</code>.</param>
             <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <param name="pageSize">the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.</param>
             <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator.</returns>
             <exception cref="T:System.ArgumentException">if the provided parameters are not correct.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.GetIndividualEnrollmentAttestationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the attestation information for an individual enrollment.
            </summary>
            <remarks>
            If the registrationId does not match any individual enrollment, this method will throw a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
            </remarks>
            <param name="registrationId">The registration Id of the individual enrollment to retrieve the attestation information of. This may not be null or empty.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism"/> of the individual enrollment associated with the provided registrationId.</returns>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.GetEnrollmentGroupAttestationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the enrollmentGroup attestation information.
            </summary>
            <remarks>
            If the provided group id does not match up with any enrollment group, this method will throw <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClientException"/>.
            </remarks>
            <param name="enrollmentGroupId">the <code>string</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.AttestationMechanism"/> associated with the provided group Id.</returns>
        </member>
        <member name="T:Microsoft.Azure.Devices.Provisioning.Service.Query">
             <summary>
             The query iterator.
             </summary>
             <remarks>
             The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.Query"/> iterator is the result of the query factory for
             <list type="bullet">
                 <item><b>IndividualEnrollment:</b>
                     <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateIndividualEnrollmentQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Int32)"/>
                 </item>
                 <item><b>EnrollmentGroup:</b>
                     <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.Int32)"/>
                 </item>    
                 <item><b>RegistrationStatus:</b>
                     <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.ProvisioningServiceClient.CreateEnrollmentGroupRegistrationStateQuery(Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification,System.String,System.Int32)"/>
                 </item>
             </list>
             On all cases, the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> contains a SQL query that must follow the
                 Query Language for the Device Provisioning Service.
            
             Optionally, an <code>Integer</code> with the <b>page size</b>, can determine the maximum number of the items in the
                 <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QueryResult"/> returned by the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.Query.NextAsync"/>. It must be any positive integer, and if it 
                 contains 0, the Device Provisioning Service will ignore it and use a standard page size.
            
             You can use this Object as a standard iterator, just using the <code>HasNext</code> and <code>NextAsync</code> in a
                 <code>while</code> loop, up to the point where the <code>HasNext</code> contains <code>false</code>. But, keep 
                 in mind that the <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QueryResult"/> can contain a empty list, even if the <code>HasNext</code> contained 
                 <code>true</code>. For example, image that you have 10 IndividualEnrollment in the Device Provisioning Service 
                 and you created new query with the <code>PageSize</code> equals 5. In the first iteration, <code>HasNext</code> 
                 will contains <code>true</code>, and the first <code>NextAsync</code> will return a <code>QueryResult</code> with 
                 5 items. After, your code will check the <code>HasNext</code>, which will contains <code>true</code> again. Now, 
                 before you get the next page, somebody deletes all the IndividualEnrollment. What happened, when you call the 
                 <code>NextAsync</code>, it will return a valid <code>QueryResult</code>, but the <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.Items"/> 
                 will contain an empty list.
            
             Besides the <code>Items</code>, the <code>QueryResult</code> contains the <see cref="P:Microsoft.Azure.Devices.Provisioning.Service.QueryResult.ContinuationToken"/>.
                 You can also store a query context (QuerySpecification + ContinuationToken) and restart it in the future, from
                 the point where you stopped. Just recreating the query with the same <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QuerySpecification"/> and calling
                 the <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.Query.NextAsync(System.String)"/> passing the stored <code>ContinuationToken</code>.
             </remarks>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.Query.HasNext">
            <summary>
            Getter for has next
            </summary>
            <remarks>
            Contains <code>true</code> if the query is not finished in the Device Provisioning Service, and another
                iteration with <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.Query.NextAsync"/> may return more items. Call <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.Query.NextAsync"/> after 
                a <code>true</code> <code>HasNext</code> will result in a <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QueryResult"/> that can or 
                cannot contains elements. But call <see cref="M:Microsoft.Azure.Devices.Provisioning.Service.Query.NextAsync"/> after a <code>false</code> <code>HasNext</code> 
                will result in a exception.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.Query.PageSize">
            <summary>
            Getter and setter for PageSize.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.Provisioning.Service.Query.ContinuationToken">
            <summary>
            Getter and setter for the ContinuationToken.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.Query.NextAsync(System.String)">
            <summary>
            Return the next page of result for the query using a new continuationToken.
            </summary>
            <param name="continuationToken">the <code>String</code> with the previous continuationToken. It cannot be <code>null</code> or empty.</param>
            <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QueryResult"/> with the next page of items for the query.</returns>
            <exception cref="T:System.IndexOutOfRangeException">if the query does no have more pages to return.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.Query.NextAsync">
            <summary>
            Return the next page of result for the query.
            </summary>
            <returns>The <see cref="T:Microsoft.Azure.Devices.Provisioning.Service.QueryResult"/> with the next page of items for the query.</returns>
            <exception cref="T:System.IndexOutOfRangeException">if the query does no have more pages to return.</exception>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.Query.Dispose">
            <summary>
            Dispose the HTTP resources.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Devices.Provisioning.Service.Query.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Microsoft.Azure.Devices.ApiResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ArgumentMustBeNonNegative">
            <summary>
              Looks up a localized string similar to The value of this argument must be non-negative..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ArgumentMustBePositive">
            <summary>
              Looks up a localized string similar to The value of this argument must be positive..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ConnectionStringIsNotWellFormed">
            <summary>
              Looks up a localized string similar to The connection string is not well formed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.DeviceAuthenticationInvalid">
            <summary>
              Looks up a localized string similar to Device {0} cannot specify both symmetric keys and thumbprints..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.DeviceIdInvalid">
            <summary>
              Looks up a localized string similar to The device identifier {0} is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.DeviceIdNotSet">
            <summary>
              Looks up a localized string similar to The id of the device was not set..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.DeviceJobParametersNullOrEmptyDeviceList">
            <summary>
              Looks up a localized string similar to null or empty deviceIds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.DeviceJobParametersNullOrEmptyDeviceListEntries">
            <summary>
              Looks up a localized string similar to null or empty deviceId entries specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.DeviceKeysInvalid">
            <summary>
              Looks up a localized string similar to Either both primary and secondary keys must be specified or neither one to auto generate on service side..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.EnrollmentAlreadyExists">
            <summary>
              Looks up a localized string similar to Enrollment {0} already exists..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.EnrollmentGroupAlreadyExists">
            <summary>
              Looks up a localized string similar to EnrollmentGroup {0} already exists..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.EnrollmentGroupIdIsNull">
            <summary>
              Looks up a localized string similar to The enrollment group identifier is null..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.EnrollmentGroupNotFound">
            <summary>
              Looks up a localized string similar to Enrollment group {0} not found..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.EnrollmentGroupNotFoundAtServiceName">
            <summary>
              Looks up a localized string similar to Enrollment group {0} at Provisioning Service {1} not found..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.EnrollmentIdNotValid">
            <summary>
              Looks up a localized string similar to The enrollment identifier {0} is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.EnrollmentNotFound">
            <summary>
              Looks up a localized string similar to Enrollment {0} not found..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.EnrollmentNotFoundAtServiceName">
            <summary>
              Looks up a localized string similar to Enrollment {0} at DRS {1} not registered..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileDeletingDeployment">
            <summary>
              Looks up a localized string similar to The ETag should be set while deleting the deployment..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileDeletingDevice">
            <summary>
              Looks up a localized string similar to The ETag should be set while deleting the device..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileDeletingDeviceRegistration">
            <summary>
              Looks up a localized string similar to The ETag should be set while deleting the device registration..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileDeletingEnrollment">
            <summary>
              Looks up a localized string similar to The ETag should be set while deleting the enrollment..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileDeletingEnrollmentGroup">
            <summary>
              Looks up a localized string similar to The ETag should be set while deleting the enrollment group..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileUpdatingDeployment">
            <summary>
              Looks up a localized string similar to The ETag should be set while updating the deployment..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileUpdatingDevice">
            <summary>
              Looks up a localized string similar to The ETag should be set while updating the device..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileUpdatingEnrollment">
            <summary>
              Looks up a localized string similar to The ETag should be set while updating the enrollment..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileUpdatingEnrollmentGroup">
            <summary>
              Looks up a localized string similar to The ETag should be set while updating the enrollment group..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagNotSetWhileUpdatingTwin">
            <summary>
              Looks up a localized string similar to The ETag should be set while updating the Twin..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagSetWhileCreatingDeployment">
            <summary>
              Looks up a localized string similar to The ETag should not be set while creating a deployment..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ETagSetWhileRegisteringDevice">
            <summary>
              Looks up a localized string similar to The ETag should not be set while registering the device..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.FailedToSerializeUnsupportedType">
            <summary>
              Looks up a localized string similar to Serialization operation failed due to unsupported type {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.HostNameIsNull">
            <summary>
              Looks up a localized string similar to The HostName is null..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.InvalidConnectionStringEndpoint">
            <summary>
              Looks up a localized string similar to The endpoint in the connection string is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.InvalidImportMode">
            <summary>
              Looks up a localized string similar to ImportMode not handled: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.InvalidPassword">
            <summary>
              Looks up a localized string similar to The password is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.InvalidPropertyInConnectionString">
            <summary>
              Looks up a localized string similar to The connection string has an invalid value for property: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.InvalidUser">
            <summary>
              Looks up a localized string similar to The User is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.JobClientInstanceAlreadyClosed">
            <summary>
              Looks up a localized string similar to The JobClient instance was already closed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.MessageBodyConsumed">
            <summary>
              Looks up a localized string similar to The message body cannot be read multiple times. To reuse it store the value after reading..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.MessageDisposed">
            <summary>
              Looks up a localized string similar to This messaging entity has already been closed, aborted, or disposed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.MissingPropertyInConnectionString">
            <summary>
              Looks up a localized string similar to The connection string is missing the property: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.OffsetExceedsBufferSize">
            <summary>
              Looks up a localized string similar to The specified offset exceeds the buffer size ({0} bytes)..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ParameterCannotBeNullOrEmpty">
            <summary>
              Looks up a localized string similar to The parameter {0} cannot be null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ParameterCannotBeNullOrWhitespace">
            <summary>
              Looks up a localized string similar to The parameter {0} cannot be null, empty or whitespace..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.PropertyIsNotValidUri">
            <summary>
              Looks up a localized string similar to The {0} property is not a valid Uri.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.ProvisioningServiceClientAlreadyClosed">
            <summary>
              Looks up a localized string similar to The DeviceRegistrationClient instance was already closed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.RegistrationIdIsNull">
            <summary>
              Looks up a localized string similar to The registration identifier is null..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.RegistrationNotFound">
            <summary>
              Looks up a localized string similar to Registration {0} not found..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.RegistrationNotFoundAtServiceName">
            <summary>
              Looks up a localized string similar to Registration {0} at DRS {1} not found..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.RegistryManagerInstanceAlreadyClosed">
            <summary>
              Looks up a localized string similar to The RegistryManager instance was already closed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.SizeExceedsRemainingBufferSpace">
            <summary>
              Looks up a localized string similar to The specified size exceeds the remaining buffer space ({0} bytes)..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Devices.ApiResources.StringIsNotThumbprint">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid X.509 thumbprint.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Devices.Shared.DefaultWebProxySettings">
            <summary>
            WebProxy class for initializing default web proxy
            </summary>
        </member>
    </members>
</doc>
